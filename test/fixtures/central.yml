info:
  title: "Washington"
  version: "5.0.0"
  description: "API Documentation for Central server."
swagger: "2.0"
paths:
  /elasticProxy/_search:
    post:
      tags:
        - "Core"
      summary: "Elastic Proxy Search"
      description: "Elastic Proxy Search"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "query"
            properties:
              query:
                type: "object"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              took: 48
              timed_out: false
              _shards:
                total: 35
                succesful: 35
                failed: 0
          schema:
            type: "object"
            properties:
              took:
                type: "number"
                example: 48
              timed_out:
                type: "boolean"
                example: false
              _shards:
                type: "object"
                properties:
                  total:
                    type: "integer"
                    example: 35
                  succesful:
                    type: "integer"
                    example: 35
                  failed:
                    type: "integer"
                    example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Query"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is query"
                example: "Missing Resource: Query"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/configs:
    get:
      tags:
        - "Core"
      summary: "Retrieve Configurations"
      description: "Retrieve Configurations"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              configs:
                channels:
                  - name: "ATM"
                    label: "ATM"
                    color: "#dd360a"
                  - name: "POS"
                    label: "In Store"
                    color: "#3166ce"
                  - name: "ECOM"
                    label: "Online"
                    color: "#079711"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              configs:
                type: "object"
                properties:
                  channels:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        name:
                          type: "string"
                          example: "ATM"
                        label:
                          type: "string"
                          example: "ATM"
                        color:
                          type: "string"
                          example: "#079711"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
  /api/v1/utils/hashSalt:
    post:
      tags:
        - "Core"
      summary: "Retrieves Hash Value"
      description: "Retrieves Hash Value of Plain Text"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hashType"
              - "plainText"
            properties:
              hashType:
                type: "string"
                example: "user"
              plainText:
                type: "string"
                example: "password123"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              hash:
                type: "string"
                description: "SHA-256 hash of plainText"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Hash Type"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hashType / plainText"
                example: "Missing Resource: Hash Type"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
  /api/v1/apps/versions/{platform}:
    get:
      tags:
        - "Core"
      summary: "Retrieve app versions"
      description: "Retrieve app versions"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "platform"
          in: "path"
          required: true
          type: "string"
          description: "Platform being queried ios or android"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              version:
                - platform: "ios"
                  version: "1.2.1"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              version:
                type: "object"
                properties:
                  platform:
                    type: "string"
                    example: "ios"
                  version:
                    type: "string"
                    example: "1.2.1"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Platform"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is platform"
                example: "Missing Resource: Platform"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/apps/versions:
    get:
      tags:
        - "Core"
      summary: "Retrieve app versions"
      description: "Retrieve app versions"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              version:
                - platform: "ios"
                  version: "1.2.1"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              version:
                type: "object"
                properties:
                  platform:
                    type: "string"
                    example: "ios"
                  version:
                    type: "string"
                    example: "1.2.1"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/service/serviceSoapClient:
    post:
      tags:
        - "Core"
      summary: "Service Soap Client"
      description: "Service Soap Client"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "wsdlUrl"
              - "soapClientOpts"
              - "soapHeaders"
              - "soapBody"
              - "requestModuleOpts"
              - "extraHTTPHeaders"
              - "operation"
            properties:
              wsdlUrl:
                type: "string"
                example: "http://www.dneonline.com/calculator.asmx?WSDL"
              soapClientOpts:
                type: "object"
                properties:
                  escapeXML:
                    type: "boolean"
                    example: false
                  disableCache:
                    type: "boolean"
                    example: true
              soapBody:
                type: "object"
                example:
                  intA:
                    $value: 1234
                  intB:
                    $value: 9999
              requestModuleOpts:
                type: "object"
                example: ""
              extraHTTPHeaders:
                type: "object"
                example: ""
              soapHeaders:
                type: "object"
                example: ""
              operation:
                type: "array"
                items:
                  type: "string"
                  example: "Calculator"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              result:
                addResult: 11233
          schema:
            properties:
              result:
                type: "object"
                example:
                  addResult: 11233
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/bins:
    get:
      tags:
        - "Core"
      summary: "Retrieve Bins"
      description: "Retrieve Bins"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              bins:
                - settings:
                    paymentChannel:
                      ATM: 1
                      POS: 1
                      ECOM: 1
                      MOTO: 1
                      CNTC: 1
                    approvedCountries:
                      - 840
                      - 4
                    blockedStates:
                      - "NY"
                    cardEnabled: true
                    blackLists:
                      merchantIdentifier:
                        - "FIRST PERFORMANCE"
                      terminalId:
                        - "terminalid1234"
                      merchantCountry:
                        - "US"
                      merchantCategory:
                        - "STORE"
                      currencyCode:
                        - 80
                  id: 123412
                  type: "debit"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              bins:
                type: "array"
                items:
                  properties:
                    settings:
                      properties:
                        paymentChannels:
                          properties:
                            ATM:
                              type: "integer"
                              format: "int32"
                              description: "Allow automated teller machine (ATM) transactions"
                              example: 1
                            ECOM:
                              type: "integer"
                              format: "int32"
                              description: "Allow e-commerce transactions"
                              example: 1
                            POS:
                              type: "integer"
                              format: "int32"
                              description: "Allow point-of-sale (POS) transactions"
                              example: 1
                            MOTO:
                              type: "integer"
                              format: "int32"
                              description: "Allow mail-order/phone-order (MOTO) transactions"
                              example: 1
                            CNTC:
                              type: "integer"
                              format: "int32"
                              description: "Allow contactless card charges"
                              example: 1
                        approvedCountries:
                          type: "array"
                          items:
                            type: "integer"
                            example: 840
                        blockedStates:
                          type: "array"
                          items:
                            type: "string"
                            example: "NY"
                        cardEnabled:
                          type: "boolean"
                          example: true
                        blacklists:
                          properties:
                            merchantIdentifier:
                              type: "array"
                              items:
                                type: "string"
                                example: "FIRST PERFORMANCE"
                            terminalId:
                              type: "array"
                              items:
                                type: "string"
                                example: "teminalid111"
                            merchantCountry:
                              type: "array"
                              items:
                                type: "string"
                                example: "US"
                            merchantCategory:
                              type: "array"
                              items:
                                type: "string"
                                example: ""
                            currencyCode:
                              type: "array"
                              items:
                                type: "string"
                                example: "840"
                    id:
                      type: "string"
                      description: "Card bin (bank identification number)"
                      example: "123412"
                    type:
                      type: "string"
                      example: "debit"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    post:
      tags:
        - "Core"
      summary: "Creates new Bin"
      description: "Creates new Bin"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "id"
            properties:
              id:
                type: "string"
                example: "123412"
              type:
                type: "string"
                example: "debit"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: id"
          schema:
            properties:
              status:
                type: "string"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "101 for missing resource or 102 for invalid resource"
                example: 101
              http_code:
                type: "integer"
                example: 400
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is id / type"
                example: "Missing Resource: id"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/bins/{id}:
    get:
      tags:
        - "Core"
      summary: "Retrieves Bin by ID"
      description: "Retrieves Bin by ID"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          required: true
          type: "string"
          description: "Bin (Bank Identification Number) ID"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              bin:
                settings:
                  paymentChannel:
                    ATM: 1
                    POS: 1
                    ECOM: 1
                    MOTO: 1
                    CNTC: 1
                  approvedCountries:
                    - 840
                    - 4
                  blockedStates:
                    - "NY"
                  cardEnabled: true
                  blackLists:
                    merchantIdentifier:
                      - "FIRST PERFORMANCE"
                    terminalId:
                      - "terminalid1234"
                    merchantCountry:
                      - "US"
                    merchantCategory:
                      - "STORE"
                    currencyCode:
                      - 80
                id: 123412
                type: "debit"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              bin:
                properties:
                  settings:
                    properties:
                      paymentChannels:
                        properties:
                          ATM:
                            type: "integer"
                            format: "int32"
                            description: "Allow automated teller machine (ATM) transactions"
                            example: 1
                          ECOM:
                            type: "integer"
                            format: "int32"
                            description: "Allow e-commerce transactions"
                            example: 1
                          POS:
                            type: "integer"
                            format: "int32"
                            description: "Allow point-of-sale (POS) transactions"
                            example: 1
                          MOTO:
                            type: "integer"
                            format: "int32"
                            description: "Allow mail-order/phone-order (MOTO) transactions"
                            example: 1
                          CNTC:
                            type: "integer"
                            format: "int32"
                            description: "Allow contactless card charges"
                            example: 1
                      approvedCountries:
                        type: "array"
                        items:
                          type: "integer"
                          example: 840
                      blockedStates:
                        type: "array"
                        items:
                          type: "string"
                          example: "NY"
                      cardEnabled:
                        type: "boolean"
                        example: true
                      blacklists:
                        properties:
                          merchantIdentifier:
                            type: "array"
                            items:
                              type: "string"
                              example: "FIRST PERFORMANCE"
                          terminalId:
                            type: "array"
                            items:
                              type: "string"
                              example: "teminalid111"
                          merchantCountry:
                            type: "array"
                            items:
                              type: "string"
                              example: "US"
                          merchantCategory:
                            type: "array"
                            items:
                              type: "string"
                              example: ""
                          currencyCode:
                            type: "array"
                            items:
                              type: "string"
                              example: "840"
                  id:
                    type: "string"
                    description: "Card bin (bank identification number)"
                    example: "123412"
                  type:
                    type: "string"
                    example: "debit"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: id"
          schema:
            properties:
              status:
                type: "string"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "101 for missing resource or 102 for invalid resource"
                example: 101
              http_code:
                type: "integer"
                example: 400
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is id"
                example: "Missing Resource: id"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    put:
      tags:
        - "Core"
      summary: "Updates Bin by ID"
      description: "Updates Bin by ID"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          required: true
          type: "string"
          description: "Bin (Bank Identification Number) ID"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "id"
            properties:
              id:
                type: "string"
                example: "123412"
              type:
                type: "string"
                example: "debit"
              settings:
                properties:
                  paymentChannels:
                    properties:
                      ATM:
                        type: "integer"
                        format: "int32"
                        description: "Allow automated teller machine (ATM) transactions"
                        example: 1
                      ECOM:
                        type: "integer"
                        format: "int32"
                        description: "Allow e-commerce transactions"
                        example: 1
                      POS:
                        type: "integer"
                        format: "int32"
                        description: "Allow point-of-sale (POS) transactions"
                        example: 1
                      MOTO:
                        type: "integer"
                        format: "int32"
                        description: "Allow mail-order/phone-order (MOTO) transactions"
                        example: 1
                      CNTC:
                        type: "integer"
                        format: "int32"
                        description: "Allow contactless card charges"
                        example: 1
                  approvedCountries:
                    type: "array"
                    items:
                      type: "integer"
                      example: 840
                  blockedStates:
                    type: "array"
                    items:
                      type: "string"
                      example: "NY"
                  cardEnabled:
                    type: "boolean"
                    example: true
                  blacklists:
                    properties:
                      merchantIdentifier:
                        type: "array"
                        items:
                          type: "string"
                          example: "FIRST PERFORMANCE"
                      terminalId:
                        type: "array"
                        items:
                          type: "string"
                          example: "teminalid111"
                      merchantCountry:
                        type: "array"
                        items:
                          type: "string"
                          example: "US"
                      merchantCategory:
                        type: "array"
                        items:
                          type: "string"
                          example: ""
                      currencyCode:
                        type: "array"
                        items:
                          type: "string"
                          example: "840"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: id"
          schema:
            properties:
              status:
                type: "string"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "101 for missing resource or 102 for invalid resource"
                example: 101
              http_code:
                type: "integer"
                example: 400
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is id"
                example: "Missing Resource: id"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/bins/bulk:
    post:
      tags:
        - "Core"
      summary: "Create Bins in Bulk"
      description: "Create Bins in Bulk"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "bins"
              - "type"
            properties:
              bins:
                type: "array"
                items:
                  type: "string"
                  example: "123412"
              type:
                type: "string"
                example: "debit"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: bins"
          schema:
            properties:
              status:
                type: "string"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "101 for missing resource or 102 for invalid resource"
                example: 101
              http_code:
                type: "integer"
                example: 400
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is bins / type"
                example: "Missing Resource: bins"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/addCardSecure:
    post:
      tags:
        - "Core"
      summary: "Adds a new card"
      description: "Adds a card to the database. It is important to note that addCardSecure service is located on the API Listener, rather than Central."
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "number"
            properties:
              number:
                type: "integer"
                description: "Card number to be added"
                maxLength: 19
                example: 1234123412341234
              name:
                type: "string"
                description: "Card Name"
                example: "John Doe"
              statementDate:
                type: "integer"
                description: "Due date of the card statement, recommended when using limits for credit."
                example: 31
              userId:
                type: "string"
                description: "Used by issuer to relate cards to a customer"
                example: "testId"
              documentType:
                type: "string"
                description: "String representing the type of document number entered for userId"
                example: "C"
              organizationCode:
                type: "string"
                description: "String representing the affiliated business entity code"
                example: "ORG_Code"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Number"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                type: "string"
                description: "Returns Missing Resource: Number"
                example: "Missing Resource: Number"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Number"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns Invalid Resource: Number"
                example: "Invalid Resource: Number"
  /api/v1/card/addCard:
    post:
      tags:
        - "Core"
      summary: "Adds a new card"
      description: "Adds a card to the database."
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "number"
            properties:
              number:
                type: "integer"
                description: "Card number to be added"
                maxLength: 19
                example: 1234123412341234
              name:
                type: "string"
                description: "Card Name"
                example: "John Doe"
              statementDate:
                type: "integer"
                description: "Due date of the card statement, recommended when using limits for credit."
                example: 31
              userId:
                type: "string"
                description: "Used by issuer to relate cards to a customer"
                example: "testId"
              documentType:
                type: "string"
                description: "String representing the type of document number entered for userId"
                example: "C"
              organizationCode:
                type: "string"
                description: "String representing the affiliated business entity code"
                example: "ORG_Code"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Number"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is number / statementDate/ userId / documentType / organizationCode"
                example: "Missing Resource: Number"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/editCard:
    put:
      tags:
        - "Core"
      summary: "Edits a card"
      description: "Edits a card specified using card number hash."
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              name:
                type: "string"
                example: "Test Visa"
              organizationCode:
                type: "string"
                example: "MNL"
              statementDate:
                type: "integer"
                example: 20
              clientUserId:
                type: "string"
                example: "testId"
              isCorpCard:
                type: "integer"
                example: 1
              documentType:
                type: "string"
                example: "docx"
              logoValue:
                type: "string"
                example: "logovalue"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              status_message: "Missing Resource: Card Hash"
              http_code: 400
              status_code: 101
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / name / organizationCode / statementDate / clientUserId / isCorpCard / documentType / logoValue"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/deleteCard:
    delete:
      tags:
        - "Core"
      summary: "Deletes a card"
      description: "Deletes a particular card from Central and Decision Engine databases."
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          description: "Request object"
      responses:
        204:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
  /api/v1/card/renameCard:
    post:
      tags:
        - "Core"
      summary: "Card Name update"
      description: "Updates card name"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
              - "name"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              name:
                type: "string"
                description: "string to replace the current name"
                example: "new name"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing Resource: (RESOURCE), where (RESOURCE) is hash / name"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/cancelCard:
    post:
      tags:
        - "Core"
      summary: "Cancels a card"
      description: "Marks a particular card as cancelled and inoperational"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              reason:
                type: "string"
                description: "Reason for card cancellation"
                example: "Fraud detected"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
  /api/v1/card/resetCard:
    post:
      tags:
        - "Core"
      summary: "Reset card settings to factory defaults"
      description: "Reset card settings to factory defaults"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing Resource: (RESOURCE), where (RESOURCE) is hash"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/reissueCard:
    post:
      tags:
        - "Core"
      summary: "Reissues a new card from an existing card"
      description: "Cancels an active card from the system and replaces with a new card."
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "old"
              - "new"
              - "bin"
            properties:
              old:
                description: "Salted SHA-256 hash of the card to be canceled"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              new:
                description: "Salted SHA-256 hash of the card to be added"
                type: "string"
                example: "8dc2dea03ce9c6c7326c69ee65ea180fb46a64c4486eb6f8cd18e6930ef82ef7"
              bin:
                type: "string"
                description: "Card bin (bank identification number)"
                example: "123412"
              endDigits:
                type: "string"
                description: "Last 4 digits of new number"
                example: "5678"
              expMM:
                type: "string"
                description: "Card's expiration Month"
                example: 12
              expYY:
                type: "string"
                description: "Card's expiration Year"
                example: 20
              reason:
                type: "string"
                description: "Reason for reissuance of card"
                example: "Card reissuance"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Old Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                type: "string"
                description: "Returns Missing Resource: Old Card Hash"
                example: "Missing Resource: Old Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Old Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 101
              status_message:
                type: "string"
                description: "Returns Invalid Resource: Old Card Hash"
                example: "Invalid Resource: Old Card Hash"
        400-C:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: New Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                type: "string"
                description: "Returns Missing Resource: New Card Hash"
                example: "Missing Resource: New Card Hash"
        400-D:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: New Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 101
              status_message:
                type: "string"
                description: "Returns Invalid Resource: New Card Hash"
                example: "Invalid Resource: New Card Hash"
        400-E:
          description: "Error - Validation on duplicate request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 103
              status_message: "Duplicate Resource: New Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 103"
                example: 103
              status_message:
                type: "string"
                description: "Returns Duplicate Resource: New Card Hash"
                example: "Duplicate Resource: New Card Hash"
  /api/v1/card/getCardHash:
    post:
      tags:
        - "Core"
      summary: "Hashes card number"
      description: "Calculates and returns the SHA-256 salted hash of the given card number"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "number"
            properties:
              number:
                type: "string"
                description: "Card Number"
                example: "1234123412341234"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              status_message: "Missing Resource: Card Number"
              http_code: 400
              status_code: 101
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing Resource: Card Number"
                example: "Missing Resource: Card Number"
        400-B:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              status_message: "Invalid Resource: Card Number"
              http_code: 400
              status_code: 102
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns status code 102"
                example: 102
              status_message:
                type: "string"
                description: "Invalid Resource: Card Number"
                example: "Invalid Resource: Card Number"
  /api/v1/card/getCardData:
    post:
      tags:
        - "Core"
      summary: "Retrieves Card Data"
      description: "Retrieves the Card Data"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              card:
                card_id: 1
                data:
                  cardEnabled: true
                  payment_channels:
                    ATM: 1
                    POS: 1
                    ECOM: 1
                    MOTO: 1
                    CNTC: 1
                  country: "840,4,248,8,12,16,20,24,660,10,28,32,51,533,36,40,31,44,48,50,52,112,56,84,204,60,64,68,535,70,72,74,76,86,96,100,854,108,116,120,124,132,136,140,148,152,156,162,166,170,174,178,180,184,188,384,191,192,531,196,203,208,262,212,214,218,818,222,226,232,233,231,238,234,242,246,250,254,258,260,266,270,268,276,288,292,300,304,308,312,316,320,831,324,624,328,332,334,336,340,344,348,352,356,360,364,368,372,833,376,380,388,392,832,400,398,404,296,408,410,414,417,418,428,422,426,430,434,438,440,442,446,807,450,454,458,462,466,470,584,474,478,480,175,484,583,498,492,496,499,500,504,508,104,516,520,524,528,540,554,558,562,566,570,574,580,578,512,586,585,275,591,598,600,604,608,612,616,620,630,634,638,642,643,646,652,654,659,662,663,666,670,882,674,678,682,686,688,690,694,702,534,703,705,90,706,710,239,728,724,144,729,740,744,748,752,756,760,158,762,834,764,626,768,772,776,780,788,792,795,796,798,800,804,784,826,581,858,860,548,862,704,92,850,876,732,887,894,716"
                  state: "VI,PR"
                date_updated: "2016-09-16 14:33:24"
                enabled: 1
                name: "Test Visa"
                number: "1234000000001234"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              card:
                type: "object"
                properties:
                  card_id:
                    type: "integer"
                    description: "Card ID"
                    example: 1
                  data:
                    type: "object"
                    description: "JSON containing card settings"
                    properties:
                      cardEnabled:
                        type: "boolean"
                        description: "Binary number indicating card On/Off status"
                        example: true
                      payment_channels:
                        properties:
                          ATM:
                            type: "integer"
                            format: "int32"
                            description: "Allow automated teller machine (ATM) transactions"
                            example: 1
                          ECOM:
                            type: "integer"
                            format: "int32"
                            description: "Allow e-commerce transactions"
                            example: 1
                          POS:
                            type: "integer"
                            format: "int32"
                            description: "Allow point-of-sale (POS) transactions"
                            example: 1
                          MOTO:
                            type: "integer"
                            format: "int32"
                            description: "Allow mail-order/phone-order (MOTO) transactions"
                            example: 1
                          CNTC:
                            type: "integer"
                            format: "int32"
                            description: "Allow contactless card charges"
                            example: 1
                      country:
                        type: "string"
                        description: "ISO 3166-1 numeric country code"
                        example: "840,4,248,8,12,16,20,24,660,10,28,32,51,533,36,40,31,44,48,50,52,112,56,84,204,60,64,68,535,70,72,74,76,86,96,100,854,108,116,120,124,132,136,140,148,152,156,162,166,170,174,178,180,184,188,384,191,192,531,196,203,208,262,212,214,218,818,222,226,232,233,231,238,234,242,246,250,254,258,260,266,270,268,276,288,292,300,304,308,312,316,320,831,324,624,328,332,334,336,340,344,348,352,356,360,364,368,372,833,376,380,388,392,832,400,398,404,296,408,410,414,417,418,428,422,426,430,434,438,440,442,446,807,450,454,458,462,466,470,584,474,478,480,175,484,583,498,492,496,499,500,504,508,104,516,520,524,528,540,554,558,562,566,570,574,580,578,512,586,585,275,591,598,600,604,608,612,616,620,630,634,638,642,643,646,652,654,659,662,663,666,670,882,674,678,682,686,688,690,694,702,534,703,705,90,706,710,239,728,724,144,729,740,744,748,752,756,760,158,762,834,764,626,768,772,776,780,788,792,795,796,798,800,804,784,826,581,858,860,548,862,704,92,850,876,732,887,894,716"
                      state:
                        type: "string"
                        example: "VI,PR"
                  date_updated:
                    type: "string"
                    format: "date-time"
                    description: "Timestamp when card was last updated"
                    example: "2016-09-16 14:33:24"
                  enabled:
                    type: "integer"
                    description: "Binary number indicating card On/Off status"
                    example: 1
                  name:
                    type: "string"
                    description: "Card name"
                    example: "Test Visa"
                  number:
                    type: "string"
                    description: "Redacted card number"
                    example: "1234000000001234"
                  bin:
                    type: "string"
                    description: "Card Bin"
                    example: "123412"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              status_message: "Missing Resource: Card Hash"
              http_code: 400
              status_code: 101
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Returns Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/getCardsDataByUserId:
    post:
      tags:
        - "Core"
      summary: "Retrieves Card Data"
      description: "Retrieves Card Data using user_id"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "userId"
            properties:
              userId:
                type: "integer"
                example: 1
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              cards:
                - card_id: 1
                  name: "Test Visa"
                  number: "1234123412341234"
                  date_updated: "2018-07-05 01:28:24"
                  card_hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                  data:
                    cardEnabled: true
                    payment_channels:
                      ATM: 1
                      POS: 1
                      ECOM: 1
                      MOTO: 1
                      CNTC: 1
                    country: "840,4,248,8,12,16,20,24,660,10,28,32,51,533,36,40,31,44,48,50,52,112,56,84,204,60,64,68,535,70,72,74,76,86,96,100,854,108,116,120,124,132,136,140,148,152,156,162,166,170,174,178,180,184,188,384,191,192,531,196,203,208,262,212,214,218,818,222,226,232,233,231,238,234,242,246,250,254,258,260,266,270,268,276,288,292,300,304,308,312,316,320,831,324,624,328,332,334,336,340,344,348,352,356,360,364,368,372,833,376,380,388,392,832,400,398,404,296,408,410,414,417,418,428,422,426,430,434,438,440,442,446,807,450,454,458,462,466,470,584,474,478,480,175,484,583,498,492,496,499,500,504,508,104,516,520,524,528,540,554,558,562,566,570,574,580,578,512,586,585,275,591,598,600,604,608,612,616,620,630,634,638,642,643,646,652,654,659,662,663,666,670,882,674,678,682,686,688,690,694,702,534,703,705,90,706,710,239,728,724,144,729,740,744,748,752,756,760,158,762,834,764,626,768,772,776,780,788,792,795,796,798,800,804,784,826,581,858,860,548,862,704,92,850,876,732,887,894,716"
                  enabled: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              cards:
                type: "array"
                items:
                  properties:
                    card_id:
                      type: "integer"
                      example: 1
                    card_hash:
                      description: "SHA-256 hash of card number"
                      type: "string"
                      example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                    data:
                      type: "object"
                      properties:
                        payment_channels:
                          properties:
                            ATM:
                              type: "integer"
                              format: "int32"
                              description: "Allow automated teller machine (ATM) transactions"
                              example: 1
                            ECOM:
                              type: "integer"
                              format: "int32"
                              description: "Allow e-commerce transactions"
                              example: 1
                            POS:
                              type: "integer"
                              format: "int32"
                              description: "Allow point-of-sale (POS) transactions"
                              example: 1
                            MOTO:
                              type: "integer"
                              format: "int32"
                              description: "Allow mail-order/phone-order (MOTO) transactions"
                              example: 1
                            CNTC:
                              type: "integer"
                              format: "int32"
                              description: "Allow contactless card charges"
                              example: 1
                        country:
                          type: "string"
                          description: "ISO 3166-1 numeric country code"
                          example: "840,4,248,8,12,16,20,24,660,10,28,32,51,533,36,40,31,44,48,50,52,112,56,84,204,60,64,68,535,70,72,74,76,86,96,100,854,108,116,120,124,132,136,140,148,152,156,162,166,170,174,178,180,184,188,384,191,192,531,196,203,208,262,212,214,218,818,222,226,232,233,231,238,234,242,246,250,254,258,260,266,270,268,276,288,292,300,304,308,312,316,320,831,324,624,328,332,334,336,340,344,348,352,356,360,364,368,372,833,376,380,388,392,832,400,398,404,296,408,410,414,417,418,428,422,426,430,434,438,440,442,446,807,450,454,458,462,466,470,584,474,478,480,175,484,583,498,492,496,499,500,504,508,104,516,520,524,528,540,554,558,562,566,570,574,580,578,512,586,585,275,591,598,600,604,608,612,616,620,630,634,638,642,643,646,652,654,659,662,663,666,670,882,674,678,682,686,688,690,694,702,534,703,705,90,706,710,239,728,724,144,729,740,744,748,752,756,760,158,762,834,764,626,768,772,776,780,788,792,795,796,798,800,804,784,826,581,858,860,548,862,704,92,850,876,732,887,894,716"
                    date_updated:
                      type: "string"
                      format: "date-time"
                      example: "2016-09-16 14:33:24"
                    enabled:
                      type: "integer"
                      example: 1
                    name:
                      type: "string"
                      example: "Test Visa"
                    number:
                      type: "string"
                      description: "Card Number"
                      example: "1234123412341234"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              status_message: "Missing Resource: User ID"
              http_code: 400
              status_code: 101
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is userId"
                example: "Missing Resource: User ID"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/getCardTimestamps:
    post:
      tags:
        - "Core"
      summary: "Retrieve card timestamps"
      description: "Retrieve card timestamps"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "user_hash"
            properties:
              user_hash:
                type: "string"
                description: "Hash value of user"
                example: "1_1488892381_jyrZSley"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              timestamps:
                1: "2017-02-01T18:30:47.000Z"
              card_count: 1
              unread_count: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              timestamps:
                type: "object"
                example:
                  1: "2017-02-01T18:30:47.000Z"
              card_count:
                type: "integer"
                example: 1
              unread_count:
                type: "integer"
                example: 1
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: User Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is user_hash"
                example: "Missing Resource: User Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/getCardActions:
    post:
      tags:
        - "Core"
      summary: "Retrieve Card Actions"
      description: "Retrieve Card Actions"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "card_hash"
            properties:
              card_hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              start_index:
                type: "integer"
                example: 0
              num_actions:
                type: "integer"
                example: 25
              date_start:
                type: "string"
                example: "2016-03-08"
              date_end:
                type: "string"
                example: "2016-03-08"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              actions:
                - id: null
                  hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b\\ 636b8852479534e3b195222903a"
                  enabled: true
                  settings: "{paymentChannels:{ATM:1,POS:1,ECOM:1,MOTO:1,CNTC:1},approvedCountries:[840,4,248,8,12,16,20,24,660,10,28,32,51,533,36,40,31,44,48,50,52,112,56,84,204,60,64,68,535,70,72,74,76,86,96,100,854,108,116,120,124,132,136,140,148,152,156,162,166,170,174,178,180,184,188,384,191,192,531,196,203,208,262,212,214,218,818,222,226,232,233,231,238,234,242,246,250,254,258,260,266,270,268,276,288,292,300,304,308,312,316,320,831,324,624,328,332,334,336,340,344,348,352,356,360,364,368,372,833,376,380,388,392,832,400,398,404,296,408,410,414,417,418,428,422,426,430,434,438,440,442,446,807,450,454,458,462,466,470,584,474,478,480,175,484,583,498,492,496,499,500,504,508,104,516,520,524,528,540,554,558,562,566,570,574,580,578,512,586,585,275,591,598,600,604,608,612,616,620,630,634,638,642,643,646,652,654,659,662,663,666,670,882,674,678,682,686,688,690,694,702,534,703,705,90,706,710,239,728,724,144,729,740,744,748,752,756,760,158,762,834,764,626,768,772,776,780,788,792,795,796,798,800,804,784,826,581,858,860,548,862,704,92,850,876,732,887,894,716],blockedStates:[],cardEnabled:true,blacklists:{merchantIdentifier:[],terminalId:[],merchantCountry:[],merchantCategory:[],currencyCode:[]}}"
                  unsyncedTime: null
                  unsyncReason: ""
                  tries: 0
                  syncedTime: null
                  api: "setEnabled"
                  source: "callcenter"
                  delta: "{enabled:1}"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              actions:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                      example: 1
                    hash:
                      description: "SHA-256 hash of card number"
                      type: "string"
                      example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                    enabled:
                      type: "boolean"
                      example: true
                    settings:
                      type: "string"
                      example: "{paymentChannels:{ATM:1,POS:1,ECOM:1,MOTO:1,CNTC:1},approvedCountries:[840,4,248,8,12,16,20,24,660,10,28,32,51,533,36,40,31,44,48,50,52,112,56,84,204,60,64,68,535,70,72,74,76,86,96,100,854,108,116,120,124,132,136,140,148,152,156,162,166,170,174,178,180,184,188,384,191,192,531,196,203,208,262,212,214,218,818,222,226,232,233,231,238,234,242,246,250,254,258,260,266,270,268,276,288,292,300,304,308,312,316,320,831,324,624,328,332,334,336,340,344,348,352,356,360,364,368,372,833,376,380,388,392,832,400,398,404,296,408,410,414,417,418,428,422,426,430,434,438,440,442,446,807,450,454,458,462,466,470,584,474,478,480,175,484,583,498,492,496,499,500,504,508,104,516,520,524,528,540,554,558,562,566,570,574,580,578,512,586,585,275,591,598,600,604,608,612,616,620,630,634,638,642,643,646,652,654,659,662,663,666,670,882,674,678,682,686,688,690,694,702,534,703,705,90,706,710,239,728,724,144,729,740,744,748,752,756,760,158,762,834,764,626,768,772,776,780,788,792,795,796,798,800,804,784,826,581,858,860,548,862,704,92,850,876,732,887,894,716],blockedStates:[],cardEnabled:true,blacklists:{merchantIdentifier:[],terminalId:[],merchantCountry:[],merchantCategory:[],currencyCode:[]}}"
                    unsyncedTime:
                      type: "string"
                      format: "date-time"
                      example: null
                    unsyncReason:
                      type: "string"
                      example: ""
                    syncedTime:
                      type: "string"
                      format: "date-time"
                      example: null
                    api:
                      type: "string"
                      example: "setEnabled"
                    source:
                      type: "string"
                      example: "callcenter"
                    delta:
                      type: "string"
                      example: "{enabled:1}"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: User Hash"
          schema:
            properties:
              status:
                type: "string"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "101 for Missing Resource, 102 for Invalid Resource"
                example: 101
              http_code:
                type: "integer"
                example: 400
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is card_hash / start_index / num_actions / date_start / date_end"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/sync:
    post:
      tags:
        - "Core"
      summary: "Synchronizes the card from washington database to specified upstream"
      description: "Synchronizes the card from washington database to specified upstream"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              upstream:
                type: "string"
                description: "name of upstream database"
                example: "tweedle-dum"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
              status_message: "Updated"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 201
                description: "Returns http code 201"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              status_message:
                type: "string"
                example: "Updated"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: upstream"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / upstream"
                example: "Missing Resource: upstream"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/isSupported:
    post:
      tags:
        - "Core"
      summary: "Checks if the card is supported"
      description: "Checks if the card is supported by passing the card bin"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "bin"
            properties:
              bin:
                type: "string"
                description: "Card bin (bank identification number)"
                example: "123412"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
              supported: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              supported:
                type: "integer"
                example: 1
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Bin"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing Resource: (RESOURCE), where (RESOURCE) is bin"
                example: "Missing Resource: Bin"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/cards/{hash}:
    put:
      tags:
        - "Core"
      summary: "Updates a Card"
      description: "Updates a Card"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
              - "settings"
              - "limits"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              apt:
                type: "integer"
                example: 101
              lastFour:
                type: "integer"
                example: 1234
              name:
                type: "string"
                example: "Test Visa"
              number:
                type: "string"
                description: "Card Number"
                example: "1234123412341234"
              expMM:
                type: "string"
                example: "12"
              expYY:
                type: "string"
                example: "20"
              zip:
                type: "string"
                example: "20018"
              settings:
                type: "object"
                properties:
                  paymentChannels:
                    properties:
                      ATM:
                        type: "integer"
                        format: "int32"
                        description: "Allow automated teller machine (ATM) transactions"
                        example: 1
                      ECOM:
                        type: "integer"
                        format: "int32"
                        description: "Allow e-commerce transactions"
                        example: 1
                      POS:
                        type: "integer"
                        format: "int32"
                        description: "Allow point-of-sale (POS) transactions"
                        example: 1
                      MOTO:
                        type: "integer"
                        format: "int32"
                        description: "Allow mail-order/phone-order (MOTO) transactions"
                        example: 1
                      CNTC:
                        type: "integer"
                        format: "int32"
                        description: "Allow contactless card charges"
                        example: 1
                  approvedCountries:
                    type: "array"
                    items:
                      type: "integer"
                      example: 840
                  blockedStates:
                    type: "array"
                    items:
                      type: "string"
                      example: "NY"
                  cardEnabled:
                    type: "boolean"
                    example: true
              limits:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 1
                  enabled:
                    type: "integer"
                    example: true
                  cardHash:
                    description: "SHA-256 hash of card number"
                    type: "string"
                    example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                  limit:
                    properties:
                      total:
                        properties:
                          monthly:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                          weekly:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                          daily:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                      POS:
                        properties:
                          monthly:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                          weekly:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                          daily:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                      ATM:
                        properties:
                          monthly:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                          weekly:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                          daily:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                      ECOM:
                        properties:
                          monthly:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                          weekly:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                          daily:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                      MOTO:
                        properties:
                          monthly:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                          weekly:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
                          daily:
                            type: "object"
                            properties:
                              limit:
                                type: "number"
                                example: 0
              balance:
                properties:
                  total:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card has to spent towards a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                  POS:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card has to spent towards a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                  ATM:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card has to spent towards a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                  ECOM:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card has to spent towards a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                  MOTO:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card has to spent towards a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "101 for Missing Resource, 102 for Invalid Resource"
                example: 101
              http_code:
                type: "integer"
                example: 400
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / name / settings / settings.paymentChannels / settings.cardEnabled / limits"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    get:
      tags:
        - "Core"
      summary: "Retrieves a card by hash"
      description: "Retrieves a card information by hash"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              card:
                settings:
                  paymentChannels:
                    ATM: 1
                    POS: 1
                    ECOM: 1
                    MOTO: 1
                    CNTC: 1
                  approvedCountries:
                    - 840
                    - 4
                    - 248
                    - 8
                    - 12
                  blockedStates:
                    - null
                  blackLists:
                    merchantIdentifier:
                      - null
                    terminalId:
                      - null
                    merchantCountry:
                      - null
                    merchantCategory:
                      - null
                    currencyCode:
                      - null
                  cardEnabled: true
                limits:
                  id: 1
                  enabled: true
                  cardHash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                  currencyCode: 840
                  limit:
                    TOTAL:
                      monthly:
                        limit: 10000
                        enabled: false
                      weekly:
                        limit: 3000
                        enabled: false
                      daily:
                        limit: 1000
                        enabled: false
                    ATM:
                      monthly:
                        limit: 10000
                        enabled: false
                      weekly:
                        limit: 3000
                        enabled: false
                      daily:
                        limit: 1000
                        enabled: false
                    POS:
                      monthly:
                        limit: 10000
                        enabled: false
                      weekly:
                        limit: 3000
                        enabled: false
                      daily:
                        limit: 1000
                        enabled: false
                    ECOM:
                      monthly:
                        limit: 10000
                        enabled: false
                      weekly:
                        limit: 3000
                        enabled: false
                      daily:
                        limit: 1000
                        enabled: false
                    MOTO:
                      monthly:
                        limit: 10000
                        enabled: false
                      weekly:
                        limit: 3000
                        enabled: false
                      daily:
                        limit: 1000
                        enabled: false
                    CNTC:
                      monthly:
                        limit: 10000
                        enabled: false
                      weekly:
                        limit: 3000
                        enabled: false
                      daily:
                        limit: 1000
                        enabled: false
                  balance:
                    TOTAL:
                      transactions:
                        - null
                      monthly:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                      weekly:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                      daily:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                    ATM:
                      transactions:
                        - null
                      monthly:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                      weekly:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                      daily:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                    POS:
                      transactions:
                        - null
                      monthly:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                      weekly:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                      daily:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                    ECOM:
                      transactions:
                        - null
                      monthly:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                      weekly:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                      daily:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                    MOTO:
                      transactions:
                        - null
                      monthly:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                      weekly:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                      daily:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                    CNTC:
                      transactions:
                        - null
                      monthly:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                      weekly:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                      daily:
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        updatedAt: "2018-07-12T12:32:22.033Z"
                name: "Test Visa"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              card:
                type: "object"
                properties:
                  name:
                    type: "string"
                    example: "Test Visa"
                  settings:
                    properties:
                      paymentChannels:
                        properties:
                          ATM:
                            type: "integer"
                            format: "int32"
                            description: "Allow automated teller machine (ATM) transactions"
                            example: 1
                          ECOM:
                            type: "integer"
                            format: "int32"
                            description: "Allow e-commerce transactions"
                            example: 1
                          POS:
                            type: "integer"
                            format: "int32"
                            description: "Allow point-of-sale (POS) transactions"
                            example: 1
                          MOTO:
                            type: "integer"
                            format: "int32"
                            description: "Allow mail-order/phone-order (MOTO) transactions"
                            example: 1
                          CNTC:
                            type: "integer"
                            format: "int32"
                            description: "Allow contactless card charges"
                            example: 1
                      approvedCountries:
                        type: "array"
                        items:
                          type: "integer"
                          example: 840
                      blockedStates:
                        type: "array"
                        items:
                          type: "string"
                          example: "NY"
                      cardEnabled:
                        type: "boolean"
                        example: true
                      blacklists:
                        properties:
                          merchantIdentifier:
                            type: "array"
                            items:
                              type: "string"
                              example: "FIRST PERFORMANCE"
                          terminalId:
                            type: "array"
                            items:
                              type: "string"
                              example: "teminalid111"
                          merchantCountry:
                            type: "array"
                            items:
                              type: "string"
                              example: "US"
                          merchantCategory:
                            type: "array"
                            items:
                              type: "string"
                              example: ""
                          currencyCode:
                            type: "array"
                            items:
                              type: "string"
                              example: "840"
                  limits:
                    type: "object"
                    properties:
                      id:
                        type: "integer"
                        example: 1
                      enabled:
                        type: "integer"
                        example: true
                      cardHash:
                        description: "SHA-256 hash of card number"
                        type: "string"
                        example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                      currencyCode:
                        type: "integer"
                        example: 840
                      limit:
                        properties:
                          total:
                            properties:
                              monthly:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                              weekly:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                              daily:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                          POS:
                            properties:
                              monthly:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                              weekly:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                              daily:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                          ATM:
                            properties:
                              monthly:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                              weekly:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                              daily:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                          ECOM:
                            properties:
                              monthly:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                              weekly:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                              daily:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                          MOTO:
                            properties:
                              monthly:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                              weekly:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                              daily:
                                type: "object"
                                properties:
                                  limit:
                                    type: "number"
                                    example: 0
                      balance:
                        properties:
                          total:
                            properties:
                              transactions:
                                type: "array"
                                items:
                                  type: "object"
                                  properties:
                                    id:
                                      type: "integer"
                                      example: 1
                                    amount:
                                      type: "number"
                                      description: "Amount the card has to spent towards a particular limit"
                                      example: 10
                              monthly:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                              weekly:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                              daily:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                          POS:
                            properties:
                              transactions:
                                type: "array"
                                items:
                                  type: "object"
                                  properties:
                                    id:
                                      type: "integer"
                                      example: 1
                                    amount:
                                      type: "number"
                                      description: "Amount the card has to spent towards a particular limit"
                                      example: 10
                              monthly:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                              weekly:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                              daily:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                          ATM:
                            properties:
                              transactions:
                                type: "array"
                                items:
                                  type: "object"
                                  properties:
                                    id:
                                      type: "integer"
                                      example: 1
                                    amount:
                                      type: "number"
                                      description: "Amount the card has to spent towards a particular limit"
                                      example: 10
                              monthly:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                              weekly:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                              daily:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                          ECOM:
                            properties:
                              transactions:
                                type: "array"
                                items:
                                  type: "object"
                                  properties:
                                    id:
                                      type: "integer"
                                      example: 1
                                    amount:
                                      type: "number"
                                      description: "Amount the card has to spent towards a particular limit"
                                      example: 10
                              monthly:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                              weekly:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                              daily:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                          MOTO:
                            properties:
                              transactions:
                                type: "array"
                                items:
                                  type: "object"
                                  properties:
                                    id:
                                      type: "integer"
                                      example: 1
                                    amount:
                                      type: "number"
                                      description: "Amount the card has to spent towards a particular limit"
                                      example: 10
                              monthly:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                              weekly:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
                              daily:
                                properties:
                                  balance:
                                    type: "number"
                                    example: 0
                                  windowStart:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-06-30T16:00:00.000Z"
                                  windowEnd:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-31T15:59:59.999Z"
                                  updatedAt:
                                    type: "string"
                                    format: "date-time"
                                    example: "2018-07-11T14:25:15.354Z"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "101 for Missing Resource, 102 for Invalid Resource"
                example: 101
              http_code:
                type: "integer"
                example: 400
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/cards:
    post:
      tags:
        - "Core"
      summary: "Creates a new Card"
      description: "Creates a new Card"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              zip:
                type: "string"
                example: "20018"
              street:
                type: "string"
                example: "1600 Pennyslvania Avenue"
              number:
                type: "string"
                description: "Card Number"
                example: "1234123412341234"
              name:
                type: "string"
                description: "Card Name"
                example: "Test Visa"
              lastFour:
                type: "string"
                description: "Last 4 digits of the card number"
                example: "1234"
              expYY:
                type: "string"
                description: "Card's Expiration Year"
                example: "22"
              expMM:
                type: "string"
                description: "Card's Expiration Month"
                example: "12"
              binId:
                type: "string"
                description: "Card bin (bank identification number)"
                example: "123412"
              bin:
                properties:
                  settings:
                    properties:
                      paymentChannels:
                        properties:
                          ATM:
                            type: "integer"
                            format: "int32"
                            description: "Allow automated teller machine (ATM) transactions"
                            example: 1
                          ECOM:
                            type: "integer"
                            format: "int32"
                            description: "Allow e-commerce transactions"
                            example: 1
                          POS:
                            type: "integer"
                            format: "int32"
                            description: "Allow point-of-sale (POS) transactions"
                            example: 1
                          MOTO:
                            type: "integer"
                            format: "int32"
                            description: "Allow mail-order/phone-order (MOTO) transactions"
                            example: 1
                          CNTC:
                            type: "integer"
                            format: "int32"
                            description: "Allow contactless card charges"
                            example: 1
                      approvedCountries:
                        type: "array"
                        items:
                          type: "integer"
                          example: 840
                      blockedStates:
                        type: "array"
                        items:
                          type: "string"
                          example: "NY"
                      cardEnabled:
                        type: "boolean"
                        example: true
                      blacklists:
                        properties:
                          merchantIdentifier:
                            type: "array"
                            items:
                              type: "string"
                              example: "FIRST PERFORMANCE"
                          terminalId:
                            type: "array"
                            items:
                              type: "string"
                              example: "teminalid111"
                          merchantCountry:
                            type: "array"
                            items:
                              type: "string"
                              example: "US"
                          merchantCategory:
                            type: "array"
                            items:
                              type: "string"
                              example: ""
                          currencyCode:
                            type: "array"
                            items:
                              type: "string"
                              example: "840"
                  id:
                    type: "string"
                    description: "Card bin (bank identification number)"
                    example: "123412"
                  type:
                    type: "string"
                    example: "debit"
              apt:
                type: "integer"
                example: 1
              id:
                type: "integer"
                example: 1
              isCorpCard:
                type: "boolean"
                example: false
              settings:
                properties:
                  paymentChannels:
                    properties:
                      ATM:
                        type: "integer"
                        format: "int32"
                        description: "Allow automated teller machine (ATM) transactions"
                        example: 1
                      ECOM:
                        type: "integer"
                        format: "int32"
                        description: "Allow e-commerce transactions"
                        example: 1
                      POS:
                        type: "integer"
                        format: "int32"
                        description: "Allow point-of-sale (POS) transactions"
                        example: 1
                      MOTO:
                        type: "integer"
                        format: "int32"
                        description: "Allow mail-order/phone-order (MOTO) transactions"
                        example: 1
                      CNTC:
                        type: "integer"
                        format: "int32"
                        description: "Allow contactless card charges"
                        example: 1
                  approvedCountries:
                    type: "array"
                    items:
                      type: "integer"
                      example: 840
                  blockedStates:
                    type: "array"
                    items:
                      type: "string"
                      example: "NY"
                  cardEnabled:
                    type: "boolean"
                    example: true
                  blacklists:
                    properties:
                      merchantIdentifier:
                        type: "array"
                        items:
                          type: "string"
                          example: "FIRST PERFORMANCE"
                      terminalId:
                        type: "array"
                        items:
                          type: "string"
                          example: "teminalid111"
                      merchantCountry:
                        type: "array"
                        items:
                          type: "string"
                          example: "US"
                      merchantCategory:
                        type: "array"
                        items:
                          type: "string"
                          example: ""
                      currencyCode:
                        type: "array"
                        items:
                          type: "string"
                          example: "840"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully"
          examples:
            application/json:
              settings:
                paymentChannel:
                  ATM: 1
                  POS: 1
                  ECOM: 1
                  MOTO: 1
                  CNTC: 1
                approvedCountries:
                  - 840
                  - 4
                  - 248
                  - 8
                  - 12
                  - 16
                  - 20
                  - 24
                  - 660
                  - 10
                  - 28
                  - 32
                  - 51
                  - 533
                  - 36
                  - 40
                  - 31
                  - 44
                  - 48
                  - 50
                  - 52
                  - 112
                  - 56
                  - 84
                  - 204
                  - 60
                  - 64
                  - 68
                  - 535
                  - 70
                  - 72
                  - 74
                  - 76
                  - 86
                  - 96
                  - 100
                  - 854
                  - 108
                  - 116
                  - 120
                  - 124
                  - 132
                  - 136
                  - 140
                  - 148
                  - 152
                  - 156
                  - 162
                  - 166
                  - 170
                  - 174
                  - 178
                  - 180
                  - 184
                  - 188
                  - 384
                  - 191
                  - 192
                  - 531
                  - 196
                  - 203
                  - 208
                  - 262
                  - 212
                  - 214
                  - 218
                  - 818
                  - 222
                  - 226
                  - 232
                  - 233
                  - 231
                  - 238
                  - 234
                  - 242
                  - 246
                  - 250
                  - 254
                  - 258
                  - 260
                  - 266
                  - 270
                  - 268
                  - 276
                  - 288
                  - 292
                  - 300
                  - 304
                  - 308
                  - 312
                  - 316
                  - 320
                  - 831
                  - 324
                  - 624
                  - 328
                  - 332
                  - 334
                  - 336
                  - 340
                  - 344
                  - 348
                  - 352
                  - 356
                  - 360
                  - 364
                  - 368
                  - 372
                  - 833
                  - 376
                  - 380
                  - 388
                  - 392
                  - 832
                  - 400
                  - 398
                  - 404
                  - 296
                  - 408
                  - 410
                  - 414
                  - 417
                  - 418
                  - 428
                  - 422
                  - 426
                  - 430
                  - 434
                  - 438
                  - 440
                  - 442
                  - 446
                  - 807
                  - 450
                  - 454
                  - 458
                  - 462
                  - 466
                  - 470
                  - 584
                  - 474
                  - 478
                  - 480
                  - 175
                  - 484
                  - 583
                  - 498
                  - 492
                  - 496
                  - 499
                  - 500
                  - 504
                  - 508
                  - 104
                  - 516
                  - 520
                  - 524
                  - 528
                  - 540
                  - 554
                  - 558
                  - 562
                  - 566
                  - 570
                  - 574
                  - 580
                  - 578
                  - 512
                  - 586
                  - 585
                  - 275
                  - 591
                  - 598
                  - 600
                  - 604
                  - 608
                  - 612
                  - 616
                  - 620
                  - 630
                  - 634
                  - 638
                  - 642
                  - 643
                  - 646
                  - 652
                  - 654
                  - 659
                  - 662
                  - 663
                  - 666
                  - 670
                  - 882
                  - 674
                  - 678
                  - 682
                  - 686
                  - 688
                  - 690
                  - 694
                  - 702
                  - 534
                  - 703
                  - 705
                  - 90
                  - 706
                  - 710
                  - 239
                  - 728
                  - 724
                  - 144
                  - 729
                  - 740
                  - 744
                  - 748
                  - 752
                  - 756
                  - 760
                  - 158
                  - 762
                  - 834
                  - 764
                  - 626
                  - 768
                  - 772
                  - 776
                  - 780
                  - 788
                  - 792
                  - 795
                  - 796
                  - 798
                  - 800
                  - 804
                  - 784
                  - 826
                  - 581
                  - 858
                  - 860
                  - 548
                  - 862
                  - 704
                  - 92
                  - 850
                  - 876
                  - 732
                  - 887
                  - 894
                  - 716
                blockedStates:
                  - "NY"
                cardEnabled: true
                blackLists:
                  merchantIdentifier:
                    - "FIRST PERFORMANCE"
                  terminalId:
                    - "terminalid1234"
                  merchantCountry:
                    - "US"
                  merchantCategory:
                    - "STORE"
                  currencyCode:
                    - 80
              isCorpCard: false
              id: 1
              apt: null
              bin:
                settings:
                  paymentChannel:
                    ATM: 1
                    POS: 1
                    ECOM: 1
                    MOTO: 1
                    CNTC: 1
                  approvedCountries:
                    - 840
                    - 4
                  blockedStates:
                    - "NY"
                  cardEnabled: true
                  blackLists:
                    merchantIdentifier:
                      - "FIRST PERFORMANCE"
                    terminalId:
                      - "terminalid1234"
                    merchantCountry:
                      - "US"
                    merchantCategory:
                      - "STORE"
                    currencyCode:
                      - 80
                id: 123412
                type: "debit"
              binId: 123412
              expMM: 12
              expYY: 20
              lastFour: 1234
              name: "Test Visa"
              number: "1234123412341234"
              street: "1600 Pennyslvania Avenue"
              synced: true
              zip: "20018"
              hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          schema:
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              zip:
                type: "string"
                example: "20018"
              street:
                type: "string"
                example: "1600 Pennyslvania Avenue"
              number:
                type: "string"
                description: "Card Number"
                example: "1234123412341234"
              name:
                type: "string"
                description: "Card Name"
                example: "Test Visa"
              lastFour:
                type: "string"
                description: "Last 4 digits of the card number"
                example: "1234"
              expYY:
                type: "string"
                description: "Card's Expiration Year"
                example: "22"
              expMM:
                type: "string"
                description: "Card's Expiration Month"
                example: "12"
              binId:
                type: "string"
                description: "Card bin (bank identification number)"
                example: "123412"
              bin:
                properties:
                  settings:
                    properties:
                      paymentChannels:
                        properties:
                          ATM:
                            type: "integer"
                            format: "int32"
                            description: "Allow automated teller machine (ATM) transactions"
                            example: 1
                          ECOM:
                            type: "integer"
                            format: "int32"
                            description: "Allow e-commerce transactions"
                            example: 1
                          POS:
                            type: "integer"
                            format: "int32"
                            description: "Allow point-of-sale (POS) transactions"
                            example: 1
                          MOTO:
                            type: "integer"
                            format: "int32"
                            description: "Allow mail-order/phone-order (MOTO) transactions"
                            example: 1
                          CNTC:
                            type: "integer"
                            format: "int32"
                            description: "Allow contactless card charges"
                            example: 1
                      approvedCountries:
                        type: "array"
                        items:
                          type: "integer"
                          example: 840
                      blockedStates:
                        type: "array"
                        items:
                          type: "string"
                          example: "NY"
                      cardEnabled:
                        type: "boolean"
                        example: true
                      blacklists:
                        properties:
                          merchantIdentifier:
                            type: "array"
                            items:
                              type: "string"
                              example: "FIRST PERFORMANCE"
                          terminalId:
                            type: "array"
                            items:
                              type: "string"
                              example: "teminalid111"
                          merchantCountry:
                            type: "array"
                            items:
                              type: "string"
                              example: "US"
                          merchantCategory:
                            type: "array"
                            items:
                              type: "string"
                              example: ""
                          currencyCode:
                            type: "array"
                            items:
                              type: "string"
                              example: "840"
                  id:
                    type: "string"
                    description: "Card bin (bank identification number)"
                    example: "123412"
                  type:
                    type: "string"
                    example: "debit"
              apt:
                type: "integer"
                example: 1
              id:
                type: "integer"
                example: 1
              isCorpCard:
                type: "boolean"
                example: false
              settings:
                properties:
                  paymentChannels:
                    properties:
                      ATM:
                        type: "integer"
                        format: "int32"
                        description: "Allow automated teller machine (ATM) transactions"
                        example: 1
                      ECOM:
                        type: "integer"
                        format: "int32"
                        description: "Allow e-commerce transactions"
                        example: 1
                      POS:
                        type: "integer"
                        format: "int32"
                        description: "Allow point-of-sale (POS) transactions"
                        example: 1
                      MOTO:
                        type: "integer"
                        format: "int32"
                        description: "Allow mail-order/phone-order (MOTO) transactions"
                        example: 1
                      CNTC:
                        type: "integer"
                        format: "int32"
                        description: "Allow contactless card charges"
                        example: 1
                  approvedCountries:
                    type: "array"
                    items:
                      type: "integer"
                      example: 840
                  blockedStates:
                    type: "array"
                    items:
                      type: "string"
                      example: "NY"
                  cardEnabled:
                    type: "boolean"
                    example: true
                  blacklists:
                    properties:
                      merchantIdentifier:
                        type: "array"
                        items:
                          type: "string"
                          example: "FIRST PERFORMANCE"
                      terminalId:
                        type: "array"
                        items:
                          type: "string"
                          example: "teminalid111"
                      merchantCountry:
                        type: "array"
                        items:
                          type: "string"
                          example: "US"
                      merchantCategory:
                        type: "array"
                        items:
                          type: "string"
                          example: ""
                      currencyCode:
                        type: "array"
                        items:
                          type: "string"
                          example: "840"
              synced:
                type: "boolean"
                example: true
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              error: "? is an unknown integration point"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                example: "? is an unknown integration point"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/cardSettings/setEnabled:
    post:
      tags:
        - "Card Controls"
      summary: "Enables a Card"
      description: "Sets the enabled property of a particular card. It is important to note that this API is independent and autonomous from setEnabled. Using the changePaymentChannels API does not affect the setEnabled API. If setEnabled is set to 0, payment channels will be disregarded."
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
              - "enabled"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              enabled:
                type: "integer"
                description: "Binary value of card on/off status"
                example: 1
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
        400-C:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Enabled"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              http_code:
                type: "integer"
                description: "Returns 400"
                example: 400
              status_message:
                type: "string"
                description: "Returns Missing Resource: Enabled"
                example: "Missing Resource: Enabled"
  /api/v1/cardSettings/getEnabled:
    post:
      tags:
        - "Card Controls"
      summary: "Retrieves Card Enable value"
      description: "Retrieves Card Enable value"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          description: "Request object"
      responses:
        200:
          description: "Success - Card On/Off Status"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              enabled: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              enabled:
                type: "integer"
                description: "Binary indicating card on/off status"
                example: 1
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
  /api/v1/card/{hash}/transactions:
    get:
      tags:
        - "Core"
      summary: "Retrieve Transactions related to Card"
      description: "Retrieve Card Transactions using Card Hash"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              results:
                records:
                  - transactionId: "deadbeef42-012345"
                    hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                    cardBin: 407112
                    amount: 100
                    createdAt: "2016-01-01T00:00:00.000Z"
                    transactionTime: "2016-01-01T00:00:00.000Z"
                    currencyCode: 62
                    paymentChannel: "POS"
                    merchantCategory: ""
                    merchantIdentifier: "McDonald's Time's Square"
                    merchantCountry: "US"
                    merchantState: "NY"
                    receiptURL: ""
                    prune: false
                    decisionDeclinedFields:
                      - null
                    expenseType: ""
                    isRecurring: "false,"
                    systemTraceAuditNumber: "012840"
                    retrievalReferenceNumber: "000000012840"
                    status: "Declined"
                    geoLocationId: ""
                next: "/api/v1/card/5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a/transactions?fetch=eyJhdHRyaWJ1dGVzIjpbInN0YXR1cyIsInBheW1lbnRDaGFubmVsIiwidHJhbnNhY3Rpb25JZCIsImNhcmRCaW4iLCJhbW91bnQiLCJ0cmFuc2FjdGlvblRpbWUiLCJjdXJyZW5jeUNvZGUiLCJtZXJjaGFudElkZW50aWZpZXIiLCJtZXJjaGFudENhdGVnb3J5IiwibWVyY2hhbnRDb3VudHJ5IiwibWVyY2hhbnRTdGF0ZSIsInBydW5lIiwiZ2VvTG9jYXRpb25JZCIsImV4cGVuc2VUeXBlIiwicmVjZWlwdFVSTCIsInN5c3RlbVRyYWNlQXVkaXROdW1iZXIiLCJyZXRyaWV2YWxSZWZlcmVuY2VOdW1iZXIiLCJ0ZXJtaW5hbElkIiwiY2FyZElkIiwiY3JlYXRlZEF0IiwiZGVjaXNpb25EZWNsaW5lZEZpZWxkcyJdLCJ3aGVyZSI6eyIkYW5kIjpbeyJjYXJkSGFzaCI6eyIkaW4iOlsiNWI4MmJlYjJhYjcwODRkNWRjMmY4MjM5ZjFmMTZmY2ZmOGQ2YjYzNmI4ODUyNDc5NTM0ZTNiMTk1MjIyOTAzYSJdfX0seyJ0cmFuc2FjdGlvbklkIjp7IiRsdCI6ImRlYWRiZWVmNDItMDEyMzQ1In19XX0sImxpbWl0IjoyLCJvcmRlciI6W1sidHJhbnNhY3Rpb25JZCIsIkRFU0MiXV19"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              result:
                type: "object"
                properties:
                  records:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        transactionId:
                          type: "string"
                          example: "deadbeef42-012345"
                        hash:
                          type: "string"
                          example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                        cardBin:
                          type: "string"
                          example: 407112
                        amount:
                          type: "integer"
                          example: 100
                        status:
                          type: "string"
                          example: "Declined"
                        createdAt:
                          type: "string"
                          format: "date-time"
                          example: {}
                        transactionTime:
                          type: "string"
                          format: "date-time"
                          example: {}
                        currencyCode:
                          type: "string"
                          example: 62
                        paymentChannel:
                          type: "string"
                          example: "POS"
                        merchantCategory:
                          type: "string"
                          example: null
                        merchantIdentifier:
                          type: "string"
                          example: "McDonald\\'s Time\\'s Square"
                        merchantCountry:
                          type: "string"
                          example: "US"
                        merchantState:
                          type: "string"
                          example: "none"
                        receiptURL:
                          type: "string"
                          example: "none"
                        prune:
                          type: "boolean"
                          example: false
                        decisionDeclinedFields:
                          type: "string"
                          example: "cardEnabled"
                        expenseType:
                          type: "integer"
                          example: 11
                        isRecurring:
                          type: "boolean"
                          example: false
                        systemTraceAuditNumber:
                          type: "string"
                          example: "012840"
                        retrievalReferenceNumber:
                          type: "string"
                          example: "00000000123840"
                        geolocationId:
                          type: "string"
                          example: null
                  next:
                    type: "string"
                    description: "Serialized object for fetching pagified resources"
                    example: "/api/v1/card/5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a/transactions?fetch=eyJhdHRyaWJ1dGVzIjpbInN0YXR1cyIsInBheW1lbnRDaGFubmVsIiwidHJhbnNhY3Rpb25JZCIsImNhcmRCaW4iLCJhbW91bnQiLCJ0cmFuc2FjdGlvblRpbWUiLCJjdXJyZW5jeUNvZGUiLCJtZXJjaGFudElkZW50aWZpZXIiLCJtZXJjaGFudENhdGVnb3J5IiwibWVyY2hhbnRDb3VudHJ5IiwibWVyY2hhbnRTdGF0ZSIsInBydW5lIiwiZ2VvTG9jYXRpb25JZCIsImV4cGVuc2VUeXBlIiwicmVjZWlwdFVSTCIsInN5c3RlbVRyYWNlQXVkaXROdW1iZXIiLCJyZXRyaWV2YWxSZWZlcmVuY2VOdW1iZXIiLCJ0ZXJtaW5hbElkIiwiY2FyZElkIiwiY3JlYXRlZEF0IiwiZGVjaXNpb25EZWNsaW5lZEZpZWxkcyJdLCJ3aGVyZSI6eyIkYW5kIjpbeyJjYXJkSGFzaCI6eyIkaW4iOlsiNWI4MmJlYjJhYjcwODRkNWRjMmY4MjM5ZjFmMTZmY2ZmOGQ2YjYzNmI4ODUyNDc5NTM0ZTNiMTk1MjIyOTAzYSJdfX0seyJ0cmFuc2FjdGlvbklkIjp7IiRsdCI6ImRlYWRiZWVmNDItMDEyMzQ1In19XX0sImxpbWl0IjoyLCJvcmRlciI6W1sidHJhbnNhY3Rpb25JZCIsIkRFU0MiXV19"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              status_message: "Missing Resource: Card Hash"
              http_code: 400
              status_code: 102
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/{hash}/messages:
    put:
      tags:
        - "Core"
      summary: "Updates a number of card messages"
      description: "updates a number of card messages by using card number hash."
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              messages:
                type: "array"
                items:
                  type: "integer"
                  example: 1
              read:
                type: "boolean"
                example: false
              starred:
                type: "boolean"
                example: false
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        204:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              status_message: "Invalid Resource: read"
              http_code: 400
              status_code: 102
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: read | starred"
                example: "Missing Resource: read"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    get:
      tags:
        - "Core"
      summary: "Retrieve Push Messages for Card"
      description: "Retrieve Push Messages for Card"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              messages:
                records:
                  - id: 99
                    filter: "declined"
                    title: "Transaction Declined"
                    body: "ECOM transaction was blocked for your card, test card"
                    isRead: true
                    isStarred: null
                    createdAt: "2018-03-28 06:54:43"
              next: "/api/v1/card/1f86acd5a4966bec420f2edd966a5b2db5c10c834f74213NDIl1dfQ=="
          schema:
            properties:
              messages:
                type: "object"
                properties:
                  records:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        id:
                          type: "integer"
                        filter:
                          type: "string"
                        title:
                          type: "string"
                        body:
                          type: "string"
                        isRead:
                          type: "boolean"
                        isStarred:
                          type: "boolean"
                        createdAt:
                          type: "string"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    delete:
      tags:
        - "Core"
      summary: "Deletes a card's push message"
      description: "Deletes a card's push message"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
        - name: "body"
          required: false
          in: "body"
          schema:
            properties:
              messages:
                type: "array"
                items:
                  type: "integer"
                  example: 1
          description: "Request object"
      responses:
        204:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              status_message: "Missing Resource: Card Hash"
              http_code: 400
              status_code: 101
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/{hash}/timezone:
    put:
      tags:
        - "Core"
      summary: "Adds/updates the timezone of a card"
      description: "Adds/updates the timezone of a card"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "tz"
            properties:
              tz:
                type: "string"
                items:
                  type: "integer"
                  example: "America/New_York"
          description: "Request object"
      responses:
        204:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "Missing"
              status_message: "Missing Resource: tz"
              http_code: 400
              status_code: 102
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing Resource: tz"
                example: "Missing Resource: tz"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
  /api/v1/card/addDevice:
    post:
      tags:
        - "Core"
      summary: "Add Device to cards"
      description: "Add Device to cards"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "arn"
              - "platform"
              - "cards"
            properties:
              arn:
                type: "string"
                description: "Amazon Resource Name"
                example: "arn:aws:sns:us-east-1:11234567876:endpoint/APNS/Example_Enterprise/59e9c9d0-bcea-3685-bda7-3abef4d562d4"
              platform:
                type: "string"
                example: "ios"
              cards:
                type: "array"
                items:
                  description: "SHA-256 hash of card number"
                  type: "string"
                  example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              language:
                type: "string"
                example: "en"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              deviceId: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              deviceId:
                type: "integer"
                example: 1
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Arn"
          schema:
            properties:
              status:
                type: "string"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "101 for Missing Resource, 102 for Invalid Resource"
                example: 101
              http_code:
                type: "integer"
                example: 400
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is arn / platform / cards"
                example: "Missing Resource: ARN"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/removeDevice:
    delete:
      tags:
        - "Core"
      summary: "Removes Device in database"
      description: "Removes Device in the database with the given ARN (Amazon Resource Name)"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "arn"
            properties:
              arn:
                type: "string"
                description: "Amazon Resource Name"
                example: "arn:aws:sns:us-east-1:11234567876:endpoint/APNS/Example_Enterprise/59e9c9d0-bcea-3685-bda7-3abef4d562d4"
          description: "Request object"
      responses:
        204:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: arn"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: <Resource>, where <Resource> is arn"
                example: "Missing Resource: arn"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/jobStatus:
    get:
      tags:
        - "Core"
      summary: "Retrieve Job Status by ID"
      description: "Retrieve Que Job Status by a Job ID"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "job_id"
          in: "query"
          required: true
          type: "integer"
          description: "Kue Job ID"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              jobInfo:
                key: "override_id:203"
                progressInfo:
                  key: "override_id:203"
                  total: 1
                  totalProcessed: 1
                  finished: 1
                  success: 1
                  error: 0
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              jobInfo:
                type: "object"
                properties:
                  key:
                    type: "string"
                    example: "override_id:203"
                  total:
                    type: "integer"
                    example: 1
                  totalProcessed:
                    type: "integer"
                    example: 1
                  finished:
                    type: "integer"
                    example: 1
                  success:
                    type: "integer"
                    example: 1
                  error:
                    type: "integer"
                    example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "no job_id provided"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "no job_id provided or job not found"
                example: "no job_id provided"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/jobStatusKey:
    get:
      tags:
        - "Core"
      summary: "Retrieve Job Status by Key"
      description: "Retrieve Que Job Status by a key pattern"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "key"
          in: "query"
          required: true
          type: "string"
          description: "Key Pattern for finding Kue jobs, can be morethan one pattern separated by comma."
        - name: "atts"
          in: "query"
          required: true
          type: "string"
          description: "Attribute used to filter"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              jobInfo:
                - key: "override_id:203"
                  progressInfo:
                    key: "override_id:203"
                    total: 1
                    totalProcessed: 1
                    finished: 1
                    success: 1
                    error: 0
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              jobInfo:
                type: "array"
                items:
                  type: "object"
                  properties:
                    key:
                      type: "string"
                      example: "override_id:203"
                    total:
                      type: "integer"
                      example: 1
                    totalProcessed:
                      type: "integer"
                      example: 1
                    finished:
                      type: "integer"
                      example: 1
                    success:
                      type: "integer"
                      example: 1
                    error:
                      type: "integer"
                      example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "no job_id provided"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "no job_id provided or job not found"
                example: "no job_id provided"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/merchants:
    get:
      tags:
        - "Core"
      summary: "Add or Update Geolocation Points"
      description: "Add or Update Geolocation Points"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "page"
          in: "query"
          required: false
          type: "integer"
          description: "Page number"
        - name: "merchantIdentifier"
          in: "query"
          required: false
          type: "string"
          description: "Merchant Identifier"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              merchants:
                - merchantId: 1
                  merchantIdentifier: "Nike"
                  merchantFullName: "Nike Times Square"
                  mccCode: "5678"
                  description: "Just Do It!"
                - merchantId: 2
                  merchantIdentifier: "Apple"
                  merchantFullName: "Apple INC"
                  mccCode: "101010"
                  description: "Think Different"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              merchants:
                type: "array"
                items:
                  type: "object"
                  properties:
                    merchantId:
                      type: "integer"
                      example: 1
                    merchantIdentifier:
                      type: "string"
                      example: "Nike"
                    merchantFullName:
                      type: "string"
                      example: "Nike Times Square"
                    mccCode:
                      type: "string"
                      example: "5678"
                    description:
                      type: "string"
                      example: "Just Do It!"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/addMessage:
    post:
      tags:
        - "Core"
      summary: "Adds Message"
      description: "Adds new message"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
              - "title"
              - "message"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              title:
                type: "string"
                example: "Title"
              message:
                type: "string"
                example: "Message body"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Title"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid: (RESOURCE), where (RESOURCE) is hash / title / message"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/readMessage:
    post:
      tags:
        - "Core"
      summary: "Reads Message"
      description: "Updates message that has been read"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "message_id"
            properties:
              message_id:
                type: "integer"
                description: "Message id to be read or to be updated"
                example: 1
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Message ID"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing: (RESOURCE), where (RESOURCE) is message_id / hash"
                example: "Missing Resource: Message ID"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/getMessages:
    post:
      tags:
        - "Core"
      summary: "Retrieves Messages"
      description: "Retrieves Messages addressed to a particular card determined using hash value of card number"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              messages:
                - messageId: 1
                  cardId: 1
                  title: "Title"
                  message: "Message"
                  isRead: true
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              messages:
                type: "array"
                items:
                  type: "object"
                  properties:
                    messageId:
                      type: "integer"
                      example: 1
                    cardId:
                      type: "integer"
                      example: 1
                    title:
                      type: "string"
                      example: "Title"
                    message:
                      type: "string"
                      example: "Message"
                    isRead:
                      type: "boolean"
                      example: true
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "101 for Missing Resource, 102 for Invalid Resource"
                example: 101
              http_code:
                type: "integer"
                example: 400
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/updatePushMessage:
    post:
      tags:
        - "Alerts"
      summary: "Updates Push Message"
      description: "Updates push message in card Ids to isRead = 1"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "user_hash"
            properties:
              user_hash:
                type: "string"
                description: "Hash value of user"
                example: "1_1488892381_jyrZSley"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
              count:
                - 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 201
                description: "Returns http code 201"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              count:
                type: "array"
                items:
                  type: "integer"
                  example: 1
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: User Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is user_hash"
                example: "Missing Resource: User Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/getPushMessages:
    post:
      tags:
        - "Alerts"
      summary: "Retrieve Push Messages"
      description: "Retrieves Push Messages addressed to a particular card determined using hash value of card number"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "user_hash"
            properties:
              user_hash:
                type: "string"
                description: "Hash value of user"
                example: "1_1488892381_jyrZSley"
              start:
                type: "integer"
                example: 0
              limit:
                type: "integer"
                example: 10
              search:
                type: "string"
                example: "Transaction"
              filter:
                type: "string"
                example: "all"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              messages:
                - message_id: 1
                  card_id: 1
                  title: "Title"
                  message: "Message"
                  filter: "filter"
                  is_read: true
                  timestamp: "2018-02-12 16:13:21"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              messages:
                type: "array"
                items:
                  type: "object"
                  properties:
                    message_id:
                      type: "integer"
                      example: 1
                    card_id:
                      type: "integer"
                      example: 1
                    title:
                      type: "string"
                      example: "Title"
                    message:
                      type: "string"
                      example: "Message"
                    filter:
                      type: "string"
                      example: "filter"
                    is_read:
                      type: "boolean"
                      example: true
                    timestamp:
                      type: "string"
                      format: "date-time"
                      example: "2018-02-12 16:13:21"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: User Hash"
          schema:
            properties:
              status:
                type: "string"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "101 for Missing Resource, 102 for Invalid Resource"
                example: 101
              http_code:
                type: "integer"
                example: 400
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is user_hash / start / limit"
                example: "Missing Resource: User Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/readPushMessage:
    post:
      tags:
        - "Alerts"
      summary: "Read Push Message"
      description: "Updates push message that has been read to isRead = 1"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "user_hash"
              - "message_id"
            properties:
              user_hash:
                type: "string"
                description: "Hash value of user"
                example: "1_1488892381_jyrZSley"
              message_id:
                type: "integer"
                description: "Message id to be read or to be updated"
                example: 1
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Message ID"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid: (RESOURCE), where (RESOURCE) is message_id / user_hash"
                example: "Missing Resource: Message ID"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/user/saveEndpoint:
    post:
      tags:
        - "Alerts"
      summary: "Saves Endpoint"
      description: "Saves Endpoint"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "user_hash"
              - "endpoint"
            properties:
              user_hash:
                type: "string"
                description: "Hash value of user"
                example: "1_1488892381_jyrZSley"
              endpoint:
                type: "string"
                description: "Amazon Resource Name"
                example: "arn:aws:sns:us-east-1:11234567876:endpoint/APNS/Example_Enterprise/59e9c9d0-bcea-3685-bda7-3abef4d562d4"
              language:
                type: "string"
                example: "en"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Endpoint"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid: (RESOURCE), where (RESOURCE) is user_hash / endpoint / language"
                example: "Missing Resource: User Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/user/setPushSettings:
    post:
      tags:
        - "Alerts"
      summary: "Set Push Messages Settings"
      description: "Set Push Messages Settings"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "user_hash"
              - "push_enabled_allowed"
              - "push_enabled_blocked"
            properties:
              user_hash:
                type: "string"
                description: "Hash value of user"
                example: "1_1488892381_jyrZSley"
              push_enabled_allowed:
                type: "boolean"
                example: true
              push_enabled_blocked:
                type: "boolean"
                example: false
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: User Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid: (RESOURCE), where (RESOURCE) is user_hash / push_enabled_allowed / push_enabled_blocked"
                example: "Missing Resource: User Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/user/getPushSettings:
    post:
      tags:
        - "Alerts"
      summary: "Retrieve Push Messages Settings"
      description: "Retrieve Push Messages Settings"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "user_hash"
              - "deviceId"
            properties:
              user_hash:
                type: "string"
                description: "Hash value of user"
                example: "1_1488892381_jyrZSley"
              deviceId:
                type: "integer"
                example: 1
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              pushSettings:
                push_enabled_allowed: 1
                push_enabled_blocked: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              pushSettings:
                type: "object"
                properties:
                  push_enabled_allowed:
                    type: "integer"
                    example: 1
                  push_enabled_blocked:
                    type: "integer"
                    example: 1
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: User Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid: (RESOURCE), where (RESOURCE) is user_hash"
                example: "Missing Resource: User Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/orgs:
    get:
      tags:
        - "Core"
      summary: "Retrieves List of Organization"
      description: "Retrieves List of Organization"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              orgs:
                - settings:
                    paymentChannel:
                      ATM: 1
                      POS: 1
                      ECOM: 1
                      MOTO: 1
                      CNTC: 1
                    approvedCountries:
                      - 840
                      - 4
                    blockedStates:
                      - "NY"
                    cardEnabled: true
                    blackLists:
                      merchantIdentifier:
                        - null
                      terminalId:
                        - null
                      merchantCountry:
                        - null
                      merchantCategory:
                        - null
                      currencyCode:
                        - null
                  id: 1
                  orgName: "testORG"
                  orgValue: "ABC"
                  bankID: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              orgs:
                type: "array"
                items:
                  properties:
                    id:
                      type: "integer"
                      example: 1
                    orgName:
                      type: "string"
                      example: "Test Org"
                    orgValue:
                      type: "string"
                      example: "ABC"
                    bankID:
                      type: "integer"
                      example: 1
                    settings:
                      properties:
                        paymentChannels:
                          properties:
                            ATM:
                              type: "integer"
                              format: "int32"
                              description: "Allow automated teller machine (ATM) transactions"
                              example: 1
                            ECOM:
                              type: "integer"
                              format: "int32"
                              description: "Allow e-commerce transactions"
                              example: 1
                            POS:
                              type: "integer"
                              format: "int32"
                              description: "Allow point-of-sale (POS) transactions"
                              example: 1
                            MOTO:
                              type: "integer"
                              format: "int32"
                              description: "Allow mail-order/phone-order (MOTO) transactions"
                              example: 1
                            CNTC:
                              type: "integer"
                              format: "int32"
                              description: "Allow contactless card charges"
                              example: 1
                        approvedCountries:
                          type: "array"
                          items:
                            type: "integer"
                            example: 840
                        blockedStates:
                          type: "array"
                          items:
                            type: "string"
                            example: "NY"
                        cardEnabled:
                          type: "boolean"
                          example: true
                        blacklists:
                          properties:
                            merchantIdentifier:
                              type: "array"
                              items:
                                type: "string"
                                example: "FIRST PERFORMANCE"
                            terminalId:
                              type: "array"
                              items:
                                type: "string"
                                example: "teminalid111"
                            merchantCountry:
                              type: "array"
                              items:
                                type: "string"
                                example: "US"
                            merchantCategory:
                              type: "array"
                              items:
                                type: "string"
                                example: ""
                            currencyCode:
                              type: "array"
                              items:
                                type: "string"
                                example: "840"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/orgs/{id}:
    get:
      tags:
        - "Core"
      summary: "Retrieves Organization by ID"
      description: "Retrieves Organization by ID"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "Organization ID"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              org:
                settings:
                  paymentChannel:
                    ATM: 1
                    POS: 1
                    ECOM: 1
                    MOTO: 1
                    CNTC: 1
                  approvedCountries:
                    - 840
                    - 4
                  blockedStates:
                    - "NY"
                  cardEnabled: true
                  blackLists:
                    merchantIdentifier:
                      - null
                    terminalId:
                      - null
                    merchantCountry:
                      - null
                    merchantCategory:
                      - null
                    currencyCode:
                      - null
                id: 1
                orgName: "testORG"
                orgValue: "ABC"
                bankID: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              org:
                properties:
                  id:
                    type: "integer"
                    example: 1
                  orgName:
                    type: "string"
                    example: "Test Org"
                  orgValue:
                    type: "string"
                    example: "ABC"
                  bankID:
                    type: "integer"
                    example: 1
                  settings:
                    properties:
                      paymentChannels:
                        properties:
                          ATM:
                            type: "integer"
                            format: "int32"
                            description: "Allow automated teller machine (ATM) transactions"
                            example: 1
                          ECOM:
                            type: "integer"
                            format: "int32"
                            description: "Allow e-commerce transactions"
                            example: 1
                          POS:
                            type: "integer"
                            format: "int32"
                            description: "Allow point-of-sale (POS) transactions"
                            example: 1
                          MOTO:
                            type: "integer"
                            format: "int32"
                            description: "Allow mail-order/phone-order (MOTO) transactions"
                            example: 1
                          CNTC:
                            type: "integer"
                            format: "int32"
                            description: "Allow contactless card charges"
                            example: 1
                      approvedCountries:
                        type: "array"
                        items:
                          type: "integer"
                          example: 840
                      blockedStates:
                        type: "array"
                        items:
                          type: "string"
                          example: "NY"
                      cardEnabled:
                        type: "boolean"
                        example: true
                      blacklists:
                        properties:
                          merchantIdentifier:
                            type: "array"
                            items:
                              type: "string"
                              example: "FIRST PERFORMANCE"
                          terminalId:
                            type: "array"
                            items:
                              type: "string"
                              example: "teminalid111"
                          merchantCountry:
                            type: "array"
                            items:
                              type: "string"
                              example: "US"
                          merchantCategory:
                            type: "array"
                            items:
                              type: "string"
                              example: ""
                          currencyCode:
                            type: "array"
                            items:
                              type: "string"
                              example: "840"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/service/prune-data:
    post:
      tags:
        - "Core"
      summary: "Prunes Data"
      description: "Prunes Data"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              results:
                - "transaction: undefined"
                - "settings: undefined"
                - "transaction: true records affected."
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              results:
                type: "array"
                items:
                  type: "string"
                  example: "transaction: undefined"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/replicationSyncHealth/{host}:
    get:
      tags:
        - "Core"
      summary: "Retrieves Replication Sync Health"
      description: "Retrieves Replication Sync Health"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "host"
          in: "path"
          required: true
          type: "string"
          description: "host"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              isSynced: true
              failures:
                - null
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              isSynced:
                type: "boolean"
                example: true
              failures:
                type: "array"
                items:
                  type: "object"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/replicationFailures/{host}:
    get:
      tags:
        - "Core"
      summary: "Retrieve Replication Failures per Host"
      description: "Retrieve Replication Failures per Host"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "host"
          in: "path"
          required: true
          type: "string"
          description: "host"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              replicationFailures:
                - id: null
                  method: "POST"
                  path: "/cards"
                  host: "http://localhost:9091"
                  error:
                    message: "FixtureFailure"
                    stack: "FixtureStack"
                    body: "FixtureBody"
                    statusCode: 500
                  resources:
                    model: "card"
                    instance:
                      id: 1
                      hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                      settings:
                        cardEnabled: true
                        paymentChannels:
                          ATM: 1
                          POS: 1
                          ECOM: 1
                          MOTO: 1
                          CNTC: 1
                        approvedCountries:
                          - 840
                          - 870
                          - 986
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              replicationFailures:
                type: "array"
                items:
                  properties:
                    id:
                      type: "integer"
                      example: 1
                    method:
                      type: "string"
                      example: "POST"
                    path:
                      type: "string"
                      example: "/cards"
                    host:
                      type: "string"
                      example: "http://localhost:9091"
                    error:
                      type: "object"
                      properties:
                        message:
                          type: "string"
                          example: "FixtureFailure"
                        stack:
                          type: "string"
                          example: "FixtureStack"
                        body:
                          type: "string"
                          example: "FixtureBody"
                        statusCode:
                          type: "integer"
                          example: 500
                    resource:
                      type: "object"
                      properties:
                        model:
                          type: "string"
                          example: "card"
                        instance:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            hash:
                              description: "SHA-256 hash of card number"
                              type: "string"
                              example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                            settings:
                              properties:
                                paymentChannels:
                                  properties:
                                    ATM:
                                      type: "integer"
                                      format: "int32"
                                      description: "Allow automated teller machine (ATM) transactions"
                                      example: 1
                                    ECOM:
                                      type: "integer"
                                      format: "int32"
                                      description: "Allow e-commerce transactions"
                                      example: 1
                                    POS:
                                      type: "integer"
                                      format: "int32"
                                      description: "Allow point-of-sale (POS) transactions"
                                      example: 1
                                    MOTO:
                                      type: "integer"
                                      format: "int32"
                                      description: "Allow mail-order/phone-order (MOTO) transactions"
                                      example: 1
                                    CNTC:
                                      type: "integer"
                                      format: "int32"
                                      description: "Allow contactless card charges"
                                      example: 1
                                approvedCountries:
                                  type: "array"
                                  items:
                                    type: "integer"
                                    example: 840
                                blockedStates:
                                  type: "array"
                                  items:
                                    type: "string"
                                    example: "NY"
                                cardEnabled:
                                  type: "boolean"
                                  example: true
                                blacklists:
                                  properties:
                                    merchantIdentifier:
                                      type: "array"
                                      items:
                                        type: "string"
                                        example: "FIRST PERFORMANCE"
                                    terminalId:
                                      type: "array"
                                      items:
                                        type: "string"
                                        example: "teminalid111"
                                    merchantCountry:
                                      type: "array"
                                      items:
                                        type: "string"
                                        example: "US"
                                    merchantCategory:
                                      type: "array"
                                      items:
                                        type: "string"
                                        example: ""
                                    currencyCode:
                                      type: "array"
                                      items:
                                        type: "string"
                                        example: "840"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/subscriptions/{id}:
    delete:
      tags:
        - "Alerts"
      summary: "Deletes Subscription"
      description: "Deletes Subscription specified by the id in the path"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "Subscription ID"
      responses:
        204:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        404:
          description: "Error - Not Found"
          examples:
            application/json:
              http_code: 404
          schema:
            properties:
              http_code:
                type: "integer"
                example: 404
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    get:
      tags:
        - "Alerts"
      summary: "Retrieves Subscription"
      description: "Retrieves Subscription specified by the id in the path"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "Subscription ID"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              subscriptions:
                - id: 1
                  type: "transaction"
                  callback: "https://acme.server.com/push"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              subscriptions:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                      example: 1
                    type:
                      type: "string"
                      example: "transaction"
                    callback:
                      type: "string"
                      example: "https://acme.server.com/push"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        404:
          description: "Error - Not Found"
          examples:
            application/json:
              http_code: 404
          schema:
            properties:
              http_code:
                type: "integer"
                example: 404
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    put:
      tags:
        - "Alerts"
      summary: "Retrieves Subscription"
      description: "Retrieves Subscription specified by the id in the path"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "Subscription ID"
        - name: "body"
          required: true
          in: "body"
          schema:
            properties:
              callback:
                type: "string"
                example: "https://acme.server.com/push"
              types:
                type: "string"
                example: "transaction"
          description: "Request object"
      responses:
        204:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: callback"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing: (RESOURCE), where (RESOURCE) is callback / type"
                example: "Missing Resource: callback"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        404:
          description: "Error - Not Found"
          examples:
            application/json:
              http_code: 404
          schema:
            properties:
              http_code:
                type: "integer"
                example: 404
        405:
          description: "Error - Method not allowed"
          examples:
            application/json:
              http_code: 405
          schema:
            properties:
              http_code:
                type: "integer"
                example: 405
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/subscriptions:
    post:
      tags:
        - "Alerts"
      summary: "Creates Subscription"
      description: "Creates Subscription"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "callback"
              - "types"
            properties:
              callback:
                type: "string"
                example: "https://acme.server.com/push"
              types:
                type: "array"
                items:
                  type: "string"
                  example: "transaction"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              subscriptions:
                - id: 1
                  type: "transaction"
                  callback: "https://acme.server.com/push"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              subscriptions:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                      example: 1
                    type:
                      type: "string"
                      example: "transaction"
                    callback:
                      type: "string"
                      example: "https://acme.server.com/push"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: callback"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing: (RESOURCE), where (RESOURCE) is callback / type"
                example: "Missing Resource: callback"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /transactions:
    post:
      tags:
        - "Core"
      summary: "Creates Transaction"
      description: "Creates Transaction"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "transaction"
            properties:
              transaction:
                type: "object"
                properties:
                  trasactionId:
                    type: "string"
                    example: "deadbeef42-012345"
                  cardHash:
                    description: "SHA-256 hash of card number"
                    type: "string"
                    example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                  cardBin:
                    type: "string"
                    description: "Card bin (bank identification number)"
                    example: "123412"
                  amount:
                    type: "number"
                    example: 50
                  currencyCode:
                    type: "string"
                    example: "076"
                  paymentChannel:
                    type: "string"
                    example: "ATM"
                  merchantCategory:
                    type: "string"
                    example: "5103"
                  merchantIdentifier:
                    type: "string"
                    example: "Tecban ATM"
                  isRecurring:
                    type: "boolean"
                    example: false
                  systemTraceAuditNumber:
                    type: "string"
                    example: "003405"
                  retrievalReferenceNumber:
                    type: "string"
                    example: "001367150811"
                  status:
                    type: "string"
                    example: "Approved"
                  decisionDeclinedFields:
                    type: "array"
                    items:
                      type: "string"
                      example: ""
              authMessage:
                type: "object"
                example:
                  0: "0200"
                  3: "013000"
                  4: "000000005000"
                  7: "0811130643"
                  11: "003405"
                  12: "100643"
                  13: "0811"
                  15: "0811"
                  22: "051"
                  23: "001"
                  32: "00053454000"
                  35: "<REDACTED BY PARSER>"
                  37: "001367150811"
                  41: "01240012"
                  42: "000000000009212"
                  49: "076"
                  52: "c3f9f1f1f2f5f5c6f8f1f4f3f0c2c2f4"
                  55: "7e01007b820238009f360200559f2608a96dfe6bb4d27e179f10120110a00003220000000000000000000000ff9f02060000000050009f03060000000000009f1a020076950580000400005f2a0209869a031508119c01019f3704076ebbcf9f3501149f450200009f4c0800000000000000009f34034203009f33036040c0"
                  61: "c3f1f0f4f5f1f0f0f8"
                  67: "00"
                  124: "02000000"
                  format: "tecban"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              transactionId: "deadbeef42-012345"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 201
                description: "Returns http code 201"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              transactionId:
                type: "string"
                example: "deadbeef42-012345"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Transaction"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is transaction"
                example: "Missing Resource: Transaction"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /transactions/{transactionId}:
    put:
      tags:
        - "Core"
      summary: "Updates Transaction"
      description: "Updates Transaction"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "transactionId"
          in: "path"
          required: true
          type: "string"
          description: "Transaction ID"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "transaction"
            properties:
              transaction:
                type: "object"
                properties:
                  trasactionId:
                    type: "string"
                    example: "deadbeef42-012345"
                  cardHash:
                    description: "SHA-256 hash of card number"
                    type: "string"
                    example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                  cardBin:
                    type: "string"
                    description: "Card bin (bank identification number)"
                    example: "123412"
                  amount:
                    type: "number"
                    example: 50
                  currencyCode:
                    type: "string"
                    example: "076"
                  paymentChannel:
                    type: "string"
                    example: "ATM"
                  merchantCategory:
                    type: "string"
                    example: "5103"
                  merchantIdentifier:
                    type: "string"
                    example: "Tecban ATM"
                  isRecurring:
                    type: "boolean"
                    example: false
                  systemTraceAuditNumber:
                    type: "string"
                    example: "003405"
                  retrievalReferenceNumber:
                    type: "string"
                    example: "001367150811"
                  status:
                    type: "string"
                    example: "Approved"
                  decisionDeclinedFields:
                    type: "array"
                    items:
                      type: "string"
                      example: ""
              authMessage:
                type: "object"
                example:
                  0: "0200"
                  3: "013000"
                  4: "000000005000"
                  7: "0811130643"
                  11: "003405"
                  12: "100643"
                  13: "0811"
                  15: "0811"
                  22: "051"
                  23: "001"
                  32: "00053454000"
                  35: "<REDACTED BY PARSER>"
                  37: "001367150811"
                  41: "01240012"
                  42: "000000000009212"
                  49: "076"
                  52: "c3f9f1f1f2f5f5c6f8f1f4f3f0c2c2f4"
                  55: "7e01007b820238009f360200559f2608a96dfe6bb4d27e179f10120110a00003220000000000000000000000ff9f02060000000050009f03060000000000009f1a020076950580000400005f2a0209869a031508119c01019f3704076ebbcf9f3501149f450200009f4c0800000000000000009f34034203009f33036040c0"
                  61: "c3f1f0f4f5f1f0f0f8"
                  67: "00"
                  124: "02000000"
                  format: "tecban"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              transactionId: "deadbeef42-012345"
          schema:
            type: "object"
            properties:
              transactionId:
                type: "string"
                example: "deadbeef42-012345"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Transaction"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is transaction"
                example: "Missing Resource: Transaction"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/history/getTransactionHistory:
    post:
      tags:
        - "Core"
      summary: "Retrieves Transaction History"
      description: "Retrieves Transaction History"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              start:
                type: "integer"
                description: "Start index of retrieved records - Default Value 0"
                example: 0
              limit:
                type: "integer"
                description: "Limit of retrieved records - Default Value 30"
                example: 20
              mode:
                type: "string"
                description: "Send date to search by date range"
                example: "date"
              start_date:
                type: "string"
                format: "date-time"
                description: "Use with mode='date'. E.g. '2016-01-01 00:00:00'"
                example: "2016-01-01 00:00:00"
              end_date:
                type: "string"
                format: "date-time"
                description: "Use with mode='date'. E.g. '2016-01-01 00:00:00'"
                example: "2016-01-01 00:00:00"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              transactions:
                - transaction_id: "deadbeef42-012345"
                  amount: 100
                  utc_datetime: "2016-01-01 00:00:00"
                  currencyCode: "076"
                  merchant_type: null
                  merchant_name: "McDonald's Times Square"
                  receipt_url: null
                  expense_type: null
                  status: "Requested"
                  type: "POS"
                  hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                  decisionDeclinedFields:
                    - null
                  isRecurring: false
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              transactions:
                type: "array"
                items:
                  type: "object"
                  properties:
                    transaction_id:
                      type: "string"
                      description: "Transaction unique identifier"
                      example: "deadbeef42-012345"
                    amount:
                      type: "number"
                      description: "Transaction amount"
                      example: 100
                    utc_datetime:
                      type: "string"
                      format: "date-time"
                      description: "Timestamp of authorization/transaction depending on the value of the status field"
                      example: "2016-01-01 00:00:00"
                    currencyCode:
                      type: "string"
                      description: "ISO-4217 numeric currency code"
                      example: "076"
                    merchant_type:
                      type: "string"
                      description: "Merchant type"
                      example: "MerchantType"
                    merchant_name:
                      type: "string"
                      description: "Merchant name"
                      example: "McDonald's Times Square"
                    receipt_url:
                      type: "string"
                      description: "Receipt URL for user-uploaded image"
                      example: "https://www.acme.com/receipt/3434adsfasf24.png"
                    expense_type:
                      type: "string"
                      description: "Transaction expense type (0 - None, 1 - Personal, 2 - Business)"
                      example: "0"
                    status:
                      type: "string"
                      description: "Values can be 'Requested', 'Approved', 'Declined', or 'Reversed'"
                      example: "Requested"
                    type:
                      type: "string"
                      description: "Transaction channel description (POS, ATM, ECOM, MOTO)"
                      example: "POS"
                    hash:
                      description: "SHA-256 hash of card number"
                      type: "string"
                      example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                    decisionDeclinedFields:
                      type: "array"
                      items:
                        type: "string"
                        description: "If status=Declined, will show fields that failed from the set of [paymentChannel, merchantCountry, cardEnabled]"
                        example:
                          - "paymentChannel"
                          - "merchantCountry"
                          - "cardEnabled"
                    isRecurring:
                      type: "boolean"
                      example: true
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                type: "string"
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
  /api/v1/history/setExpenseType:
    post:
      tags:
        - "Core"
      summary: "Sets Expense type"
      description: "Sets Expense type"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
              - "transaction_id"
              - "expense_type"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              transaction_id:
                type: "string"
                example: "deadbeef42-012345"
              expense_type:
                type: "integer"
                example: 1
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / transaction_id / expense_type"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/history/setReceipt:
    post:
      tags:
        - "Core"
      summary: "Sets Receipt"
      description: "Sets Receipt"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
              - "transaction_id"
              - "receipt_url"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              transaction_id:
                type: "string"
                example: "deadbeef42-012345"
              receipt_url:
                type: "string"
                example: "https://acme.com/receipt"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / transaction_id / receipt_url"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/gdpr/request:
    get:
      tags:
        - "GDPR"
      summary: "Retrieve GDPR Requests"
      description: "Retrieve General Data Protection Regulation (GDPR) Requests Lists"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "size"
          in: "query"
          required: false
          type: "integer"
          description: "Number of items per page"
        - name: "userId"
          in: "query"
          required: false
          type: "string"
          description: "Card Holder ID"
        - name: "cardNumber"
          in: "query"
          required: false
          type: "string"
          description: "Card Number"
        - name: "fetch"
          in: "query"
          required: false
          type: "string"
          description: "Serialized object for fetching pagified resources"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              result:
                records:
                  - id: 7
                    type: "linkedData"
                    userRight: "Right Of Access"
                    cardHashList: "7777000000000001,7777000000000002"
                    clientUserId: 1
                    status: "Completed"
                    hasData: 1
                    createdAt: "2018-07-20T15:51:06.000Z"
                    updatedAt: "2018-07-20T15:52:07.000Z"
                  - id: 6
                    type: "forget"
                    userRight: "Right Of Erasure"
                    cardHashList: 7777000000000003
                    clientUserId: null
                    status: "Completed"
                    hasData: 0
                    createdAt: "2018-07-20T15:51:06.000Z"
                    updatedAt: "2018-07-20T15:52:07.000Z"
                next: "/api/v1/gdpr/request?fetch=eyJhdHRyaWJ1dGVzIjpbInR5cGUiLCJ1c2VyUmlnaHQiLCJjYXJkSGFzaExpc3QiLCJjbGllbnRVc2VySWQiLCJzdGF0dXMiLCJpZCIsInVzZXJEYXRhIiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0Il0sIndoZXJlIjp7IiRhbmQiOltudWxsLHsiaWQiOnsiJGx0IjoxfX1dfSwibGltaXQiOjIsIm9yZGVyIjpbWyJpZCIsIkRFU0MiXV19"
                prev: "/api/v1/gdpr/request?fetch=eyJhdHRyaWJ1dGVzIjpbInR5cGUiLCJ1c2VyUmlnaHQiLCJjYXJkSGFzaExpc3QiLCJjbGllbnRVc2VySWQiLCJzdGF0dXMiLCJpZCIsInVzZXJEYXRhIiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0Il0sIndoZXJlIjp7IiRhbmQiOltudWxsLHsiaWQiOnsiJGx0IjoxfX1dfSwibGltaXQiOjIsIm9yZGVyIjpbWyJpZCIsIkRFU0MiXV19"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              result:
                type: "object"
                properties:
                  records:
                    type: "object"
                    properties:
                      id:
                        type: "integer"
                        example: 7
                      type:
                        type: "string"
                        example: "linkedData"
                      userRight:
                        type: "string"
                        example: "Right of Access"
                      cardHashList:
                        type: "string"
                        example: "7777000000000001,7777000000000002"
                      status:
                        type: "string"
                        example: "Completed"
                      hasData:
                        type: "integer"
                        format: "int32"
                        example: 1
                      createdAt:
                        type: "string"
                        example: "2018-07-20T15:52:07.000Z"
                      updaedAt:
                        type: "string"
                        example: "2018-07-20T15:52:07.000Z"
                  next:
                    type: "string"
                    description: "Serialized object for fetching pagified resources"
                    example: "/api/v1/gdpr/request?fetch=eyJhdHRyaWJ1dGVzIjpbInR5cGUiLCJ1c2VyUmlnaHQiLCJjYXJkSGFzaExpc3QiLCJjbGllbnRVc2VySWQiLCJzdGF0dXMiLCJpZCIsInVzZXJEYXRhIiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0Il0sIndoZXJlIjp7IiRhbmQiOltudWxsLHsiaWQiOnsiJGx0IjoxfX1dfSwibGltaXQiOjIsIm9yZGVyIjpbWyJpZCIsIkRFU0MiXV19"
                  prev:
                    type: "string"
                    description: "Serialized object for fetching pagified resources"
                    example: "/api/v1/gdpr/request?fetch=eyJhdHRyaWJ1dGVzIjpbInR5cGUiLCJ1c2VyUmlnaHQiLCJjYXJkSGFzaExpc3QiLCJjbGllbnRVc2VySWQiLCJzdGF0dXMiLCJpZCIsInVzZXJEYXRhIiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0Il0sIndoZXJlIjp7IiRhbmQiOltudWxsLHsiaWQiOnsiJGx0IjoxfX1dfSwibGltaXQiOjIsIm9yZGVyIjpbWyJpZCIsIkRFU0MiXV19"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Invalid Resource Length: Card Number"
          schema:
            properties:
              status:
                type: "string"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "101 for Missing Resource, 102 for Invalid Resource"
                example: 101
              http_code:
                type: "integer"
                example: 400
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is size, userId, cardNumber, fetch"
                example: "Invalid Resource: Size"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    post:
      tags:
        - "GDPR"
      summary: "Requests to process GDPR"
      description: "Requests to process General Data Protection Regulation (GDPR)"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "userRight"
              - "cardNumber"
              - "userId"
            properties:
              userRight:
                type: "string"
                example: "dataPortability"
              cardNumber:
                type: "string"
                example: "7777770000000001"
              userId:
                type: "integer"
                example: 1
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
              gdprRequestId: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 201
                description: "Returns http code 201"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              gdprRequestId:
                type: "integer"
                example: 1
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Invalid Resource: GDPR ID"
          schema:
            properties:
              status:
                type: "string"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "101 for Missing Resource, 102 for Invalid Resource"
                example: 101
              http_code:
                type: "integer"
                example: 400
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is userRight, cardNumber, userId"
                example: "Missing Resource: User Right"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/gdpr/request/{id}:
    get:
      tags:
        - "GDPR"
      summary: "Retrieves GDPR Request By ID"
      description: "Retrieve General Data Protection Regulation (GDPR) Request Detailsor Download zip file containing csv files from card, cc sessions,card subscriber, transaction, settings and limit controls table"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          required: true
          type: "string"
          description: "GDPR Request ID"
        - name: "action"
          in: "query"
          required: false
          type: "string"
          description: "Actions for gdpr api, Enum [download]"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              GDPR_Request:
                id: 7
                type: "linkedData"
                userRight: "Right Of Access"
                cardHashList: "7777000000000001,7777000000000002"
                clientUserId: 1
                status: "Completed"
                userData: null
                createdAt: "2018-07-20T15:51:06.000Z"
                updatedAt: "2018-07-20T15:52:07.000Z"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              GDPR_Request:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 7
                  type:
                    type: "string"
                    example: "linkedData"
                  userRight:
                    type: "string"
                    example: "Right of Access"
                  cardHashList:
                    type: "string"
                    example: "7777000000000001,7777000000000002"
                  status:
                    type: "string"
                    example: "Completed"
                  userData:
                    type: "string"
                    format: "NodeJS-Buffer"
                    example: "<Buffer 50 4b 03 04 14 00 0800 08 00 ad 30 ff 4c 00 00 0000 00 00 00 00 00 00 00 00 1200 00 00 73 75 62 73 63 72 6962 65 72 73 31 36 37 2e 63 7376 e3 e2 ... >"
                  createdAt:
                    type: "string"
                    example: "2018-07-20T15:52:07.000Z"
                  updaedAt:
                    type: "string"
                    example: "2018-07-20T15:52:07.000Z"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Invalid Resource: GDPR ID"
          schema:
            properties:
              status:
                type: "string"
                example: "ERROR"
              status_code:
                type: "integer"
                description: "101 for Missing Resource, 102 for Invalid Resource"
                example: 101
              http_code:
                type: "integer"
                example: 400
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is id, action"
                example: "Missing Resource: GDPR ID"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/geolocation/fence:
    post:
      tags:
        - "Geolocation"
      summary: "Adds Geo-Fence"
      description: "Adds rectangular Geo-Fence using geographic coordinates"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "latitudeLL"
              - "latitudeUR"
              - "longitudeLL"
              - "longitudeUR"
            properties:
              latitudeLL:
                type: "number"
                description: "Geographical coordinate with range from -90 to 90"
                example: 80.038
              latitudeUR:
                type: "number"
                description: "Geographical coordinate with range from -90 to 90"
                example: 80.038
              longitudeLL:
                type: "number"
                description: "Geographical coordinate with range from -180 to 180"
                example: -123.214
              longitudeUR:
                type: "number"
                description: "Geographical coordinate with range from -180 to 180"
                example: -123.214
              description:
                type: "string"
                example: "Geo-fence example"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              fenceId: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              fenceId:
                type: "integer"
                example: 1
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: LatitudeUR"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is LatitudeUR / latitudeLL / longitudeUR / LongitudeLL / Description"
                example: "Missing Resource: LatitudeUR"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    delete:
      tags:
        - "Geolocation"
      summary: "Deletes Geo-Fence"
      description: "Deletes a Geo-Fence specified by fence id"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "fenceIds"
            properties:
              fenceIds:
                type: "array"
                items:
                  type: "number"
                  example: 1
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: FenceIds"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: FenceIds"
                example: "Missing Resource: FenceIds"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    get:
      tags:
        - "Geolocation"
      summary: "Retrieves Geo-Fences"
      description: "Retrieves a set of Geo-Fences"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            properties:
              latitudeLow:
                type: "number"
                description: "Geographical coordinate with range from -90 to 90"
                example: 80.038
              latitudeHigh:
                type: "number"
                description: "Geographical coordinate with range from -90 to 90"
                example: 80.038
              longitudeLow:
                type: "number"
                description: "Geographical coordinate with range from -180 to 180"
                example: -123.214
              longitudeHigh:
                type: "number"
                description: "Geographical coordinate with range from -180 to 180"
                example: -123.214
              fenceIds:
                type: "array"
                items:
                  type: "number"
                  example: 1
              limit:
                type: "number"
                description: "Max number of fences to retrieve"
                example: 5
              start:
                type: "number"
                description: "Number of fences to offset by"
                example: 3
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              fences:
                - id: 1
                  lat_ll: 53.002
                  long_ll: 36.003
                  long_ur: 25.003
                  description: "Example fence"
              count: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              fences:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                      example: 1
                    lat_ll:
                      type: "number"
                      description: "Geographical coordinate with range from -90 to 90"
                      example: 80.038
                    lat_ur:
                      type: "number"
                      description: "Geographical coordinate with range from -90 to 90"
                      example: 80.038
                    long_ll:
                      type: "number"
                      description: "Geographical coordinate with range from -180 to 180"
                      example: -123.214
                    long_ur:
                      type: "number"
                      description: "Geographical coordinate with range from -180 to 180"
                      example: -123.214
                    description:
                      type: "string"
                      example: "Example fence"
              count:
                type: "number"
                example: 1
        400:
          description: "Error - Validation on missing or invalid request parameter - Either `fenceIds` or `LatitudeHigh`+`latitudeLow`+`longitudeHigh` +`LongitudeLow` are required"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Customer ID"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Invalid Resource: (RESOURCE), where (RESOURCE) is LatitudeHigh / latitudeLow / longitudeHigh / LongitudeLow / FenceIds / Limit / Start"
                example: "Invalid Resource: LatitudeHigh"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/geolocation/autoenable:
    put:
      tags:
        - "Geolocation"
      summary: "Updates card's autoenable preference"
      description: "Updates the autoenable preference of the given card"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "cardHash"
              - "enabled"
            properties:
              cardHash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              enabled:
                type: "boolean"
                example: true
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              fenceId: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              enabled:
                type: "boolean"
                example: false
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is Card Hash or Enabled"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    get:
      tags:
        - "Geolocation"
      summary: "Retrieves a card's autoenable preference"
      description: "Retrieves the autoenable preference of the given card."
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "cardHash"
            properties:
              cardHash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              fenceId: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              enabled:
                type: "boolean"
                example: false
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/geolocation/{params}:
    get:
      tags:
        - "Geolocation"
      summary: "Retrieves a card's geolocation"
      description: "Retrieves a number of geolocations associated to the given card."
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "cardHash"
            properties:
              cardHash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              timeLow:
                type: "string"
                format: "date-time"
                example: "2016-09-16 14:33:24"
                description: "Low end of datetime range for geolocation lookup"
              timeHigh:
                type: "string"
                format: "date-time"
                example: "2016-09-16 14:33:24"
                description: "High end of datetime range for geolocation lookup"
              limit:
                type: "integer"
                description: "Max number of geolocations to retrieve"
                example: 5
              start:
                type: "integer"
                description: "Number of geolocations to offset by"
                example: 3
          description: "Request object"
        - name: "params"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number for GET Method and customerId for POST Method"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              count: 1
              locations:
                - longitude: -74.23
                  latitude: 40.71
                  updatedAt: "2018-06-12T23:53:12.000Z"
                  createdAt: "2018-06-12T23:53:12.000Z"
                  mobilePayload:
                    metadata: "some data"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              count:
                type: "integer"
                example: 10
              locations:
                type: "array"
                items:
                  type: "object"
                  properties:
                    latitude:
                      type: "number"
                      description: "Geographical coordinate with range from -90 to 90"
                      example: 80.038
                    longitude:
                      type: "number"
                      description: "Geographical coordinate with range from -180 to 180"
                      example: -123.214
                    createdAt:
                      type: "string"
                      format: "date-time"
                      example: "2016-09-16 14:33:24"
                    updatedAt:
                      type: "string"
                      format: "date-time"
                      example: "2016-09-16 14:33:24"
                    mobilePayload:
                      type: "object"
                      description: "Contains extra metadata about accuracy estimations, elevation, etc."
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is Card Hash / Limit / Start / TimeHigh / TimeLow"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    post:
      tags:
        - "Geolocation"
      summary: "Adds geolocation"
      description: "Adds a geolocation associated to a customerId"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "latitude"
              - "longitude"
              - "customerId"
            properties:
              latitude:
                type: "number"
                description: "Geographical coordinate with range from -90 to 90"
                example: 80.038
              longitude:
                type: "number"
                description: "Geographical coordinate with range from -180 to 180"
                example: -123.214
              customerId:
                type: "string"
                example: "userID1234"
          description: "Request object"
        - name: "params"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number for GET Method and customerId for POST Method"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              geolocation_id: 1
              mobilePayload:
                metadata: "some data"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              geolocation_id:
                type: "integer"
                example: 1
              mobilePayload:
                type: "object"
                description: "Contains extra metadata about accuracy estimations, elevation, etc."
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Customer ID"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is Card Hash / Limit / Start / TimeHigh / TimeLow"
                example: "Missing Resource: Customer ID"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/{hash}/limits/{channel}:
    get:
      tags:
        - "Card Controls"
      summary: "Retrieves a channel specific card limits configuration"
      description: "Retrieves the card limits configuration of the given card hash and channel"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
        - name: "channel"
          in: "path"
          required: true
          type: "string"
          description: "Payment Channel (ATM,POS,ECOM,MOTO,CNTC)"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              limits:
                - enabled: false
                  limit:
                    monthly:
                      limit: 10000
                      enabled: false
                      balance: 0
                      windowStart: "2018-06-30T16:00:00.000Z"
                      windowEnd: "2018-07-31T15:59:59.999Z"
                    weekly:
                      limit: 3000
                      enabled: false
                      balance: 0
                      windowStart: "2018-07-14T16:00:00.000Z"
                      windowEnd: "2018-07-21T15:59:59.999Z"
                    daily:
                      limit: 1000
                      enabled: false
                      balance: 0
                      windowStart: "2018-07-16T16:00:00.000Z"
                      windowEnd: "2018-07-17T15:59:59.999Z"
                  currencyCode: "840"
                - enabled: false
                  limit:
                    monthly:
                      limit: 10000
                      enabled: false
                      balance: 0
                      windowStart: "2018-06-30T16:00:00.000Z"
                      windowEnd: "2018-07-31T15:59:59.999Z"
                    weekly:
                      limit: 3000
                      enabled: false
                      balance: 0
                      windowStart: "2018-07-14T16:00:00.000Z"
                      windowEnd: "2018-07-21T15:59:59.999Z"
                    daily:
                      limit: 1000
                      enabled: false
                      balance: 0
                      windowStart: "2018-07-16T16:00:00.000Z"
                      windowEnd: "2018-07-17T15:59:59.999Z"
                  currencyCode: "153"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              limits:
                type: "array"
                items:
                  properties:
                    enabled:
                      type: "boolean"
                      description: "Binary indicating card on/off status"
                      example: true
                    limit:
                      type: "object"
                      properties:
                        monthly:
                          properties:
                            limit:
                              type: "number"
                              description: "Returns currently set limit value"
                              example: 10000
                            enabled:
                              type: "boolean"
                              description: "Returns true if the limit control is active, else returns false"
                              example: false
                            balance:
                              type: "number"
                              description: "Returns the amount the card has spent towards a particular limit"
                              example: 0
                            windowStart:
                              type: "string"
                              format: "date-time"
                              description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                              example: "2018-06-30T16:00:00.000Z"
                            windowEnd:
                              type: "string"
                              format: "date-time"
                              description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                              example: "2018-07-31T15:59:59.999Z"
                        weekly:
                          properties:
                            limit:
                              type: "number"
                              description: "Returns currently set limit value"
                              example: 10000
                            enabled:
                              type: "boolean"
                              description: "Returns true if the limit control is active, else returns false"
                              example: false
                            balance:
                              type: "number"
                              description: "Returns the amount the card has spent towards a particular limit"
                              example: 0
                            windowStart:
                              type: "string"
                              format: "date-time"
                              description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                              example: "2018-06-30T16:00:00.000Z"
                            windowEnd:
                              type: "string"
                              format: "date-time"
                              description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                              example: "2018-07-31T15:59:59.999Z"
                        daily:
                          type: "object"
                          properties:
                            limit:
                              type: "number"
                              description: "Returns currently set limit value"
                              example: 10000
                            enabled:
                              type: "boolean"
                              description: "Returns true if the limit control is active, else returns false"
                              example: false
                            balance:
                              type: "number"
                              description: "Returns the amount the card has spent towards a particular limit"
                              example: 0
                            windowStart:
                              type: "string"
                              format: "date-time"
                              description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                              example: "2018-06-30T16:00:00.000Z"
                            windowEnd:
                              type: "string"
                              format: "date-time"
                              description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                              example: "2018-07-31T15:59:59.999Z"
                    currencyCode:
                      type: "string"
                      description: "ISO 4217 numeric currency code. Defaults to the client installation country."
                      example: "153"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Channel"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / channel"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    put:
      tags:
        - "Card Controls"
      summary: "Updates a channel specific card limits configuration"
      description: "Updates the card limits configuration of the given card hash and channel"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "channel"
          in: "path"
          required: true
          type: "string"
          description: "Payment Channel (ATM,POS,ECOM,MOTO,CNTC)"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "limit"
            properties:
              enabled:
                type: "boolean"
                description: "Returns true if the limit control is active, else returns false"
                format: "int32"
                example: true
              currencyCode:
                type: "string"
                description: "ISO 4217 numeric currency code. Defaults to the client installation country."
                example: "153"
              limit:
                properties:
                  monthly:
                    type: "object"
                    properties:
                      enabled:
                        type: "boolean"
                        description: "Returns true if the limit control is active, else returns false"
                        example: true
                      amount:
                        type: "number"
                        description: "Amount threshold to set for the limit control"
                        example: 698.75
                  weekly:
                    type: "object"
                    properties:
                      enabled:
                        type: "boolean"
                        description: "Returns true if the limit control is active, else returns false"
                        example: true
                      amount:
                        type: "number"
                        description: "Amount threshold to set for the limit control"
                        example: 244.5
                  daily:
                    type: "object"
                    properties:
                      enabled:
                        type: "boolean"
                        description: "Returns true if the limit control is active, else returns false"
                        example: true
                      amount:
                        type: "number"
                        description: "Amount threshold to set for the limit control"
                        example: 31.25
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 200"
                example: 200
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
        400-C:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Enabled"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                type: "string"
                description: "Returns Missing Resource: Enabled"
                example: "Missing Resource: Enabled"
        400-D:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Enabled"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns Invalid Resource: Enabled"
                example: "Invalid Resource: Enabled"
  /api/v1/card/{hash}/limits:
    get:
      tags:
        - "Card Controls"
      summary: "Retrieves a card's overall limits configuration"
      description: "Retrieves a card's limits configuration for all channels"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              limits:
                - enabled: false
                  limit:
                    TOTAL:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                    ATM:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                    POS:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                    ECOM:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                    MOTO:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                    CNTC:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                  currencyCode: "840"
                - enabled: false
                  limit:
                    TOTAL:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                    ATM:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                    POS:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                    ECOM:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                    MOTO:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                    CNTC:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                  currencyCode: "153"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              limits:
                type: "array"
                items:
                  type: "object"
                  properties:
                    enabled:
                      type: "boolean"
                      description: "Binary indicating card on/off status"
                      example: false
                    limit:
                      type: "object"
                      properties:
                        TOTAL:
                          type: "object"
                          properties:
                            monthly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            weekly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            daily:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                        ATM:
                          type: "object"
                          description: "Returns limit control object for <CHANNEL> ∈ {total, POS, ATM, ECOM, MOTO, Contactless}"
                          properties:
                            monthly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            weekly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            daily:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                        POS:
                          type: "object"
                          description: "Returns limit control object for <CHANNEL> ∈ {total, POS, ATM, ECOM, MOTO, Contactless}"
                          properties:
                            monthly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            weekly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            daily:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                        ECOM:
                          type: "object"
                          description: "Returns limit control object for <CHANNEL> ∈ {total, POS, ATM, ECOM, MOTO, Contactless}"
                          properties:
                            monthly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            weekly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            daily:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                        MOTO:
                          type: "object"
                          description: "Returns limit control object for <CHANNEL> ∈ {total, POS, ATM, ECOM, MOTO, Contactless}"
                          properties:
                            monthly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            weekly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            daily:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                        CNTC:
                          type: "object"
                          description: "Returns limit control object for <CHANNEL> ∈ {total, POS, ATM, ECOM, MOTO, Contactless}"
                          properties:
                            monthly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            weekly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            daily:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                    currencyCode:
                      type: "string"
                      description: "Returns the ISO 4217 numeric currency code of all limit values for the card"
                      example: "840"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
    put:
      tags:
        - "Card Controls"
      summary: "Updates a card's overall limits configuration"
      description: "Sets or updates the enabled property of limit controls for a specific card."
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "enabled"
            properties:
              enabled:
                type: "boolean"
                description: "Returns true if the limit control is active, else returns false"
                format: "int32"
                example: true
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 200"
                example: 200
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
        400-C:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Enabled"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                type: "string"
                description: "Returns Missing Resource: Enabled"
                example: "Missing Resource: Enabled"
        400-D:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Enabled"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns Invalid Resource: Enabled"
                example: "Invalid Resource: Enabled"
  /updateLimitControl:
    put:
      tags:
        - "Card Controls"
      summary: "Updates limit configuration of a specific card"
      description: "Updates overall limit configuration of the card identification provided in the request body"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "limit"
              - "balance"
              - "id"
              - "enabled"
              - "currencyCode"
              - "cardId"
              - "cardHash"
            properties:
              limit:
                properties:
                  TOTAL:
                    properties:
                      monthly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 10000
                          enabled:
                            type: "boolean"
                            example: true
                      weekly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 3000
                          enabled:
                            type: "boolean"
                            example: true
                      daily:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 1000
                          enabled:
                            type: "boolean"
                            example: true
                  POS:
                    properties:
                      monthly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 10000
                          enabled:
                            type: "boolean"
                            example: true
                      weekly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 3000
                          enabled:
                            type: "boolean"
                            example: true
                      daily:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 1000
                          enabled:
                            type: "boolean"
                            example: true
                  ATM:
                    properties:
                      monthly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 10000
                          enabled:
                            type: "boolean"
                            example: true
                      weekly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 3000
                          enabled:
                            type: "boolean"
                            example: true
                      daily:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 1000
                          enabled:
                            type: "boolean"
                            example: true
                  ECOM:
                    properties:
                      monthly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 10000
                          enabled:
                            type: "boolean"
                            example: true
                      weekly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 3000
                          enabled:
                            type: "boolean"
                            example: true
                      daily:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 1000
                          enabled:
                            type: "boolean"
                            example: true
                  MOTO:
                    properties:
                      monthly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 0
                      weekly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 0
                      daily:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 0
              balance:
                properties:
                  total:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card has to spent towards a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                  POS:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card has to spent towards a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                  ATM:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card has to spent towards a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                  ECOM:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card has to spent towards a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                  MOTO:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card has to spent towards a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
              id:
                type: "integer"
                example: 1
              enabled:
                type: "boolean"
                description: "Returns true if the limit control is active, else returns false"
                example: true
              currencyCode:
                type: "string"
                example: "840"
              cardId:
                type: "integer"
                example: 1
              cardHash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              cardHash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          schema:
            properties:
              cardHash:
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / channel / limit"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/{hash}/onForOne:
    get:
      tags:
        - "Card Controls"
      summary: "Retrieval of onForOne settings for a card"
      description: "Retrieval of onForOne settings for a card. Determine whether onForOne settings for a card is enabled or already consumed / expired."
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
      responses:
        200:
          description: "Success - Responds with the validUntil and createdAt dates if onForOne is on"
          examples:
            application/json:
              enabled: 1
              on_for_one:
                validUntil: "2018-06-15 23:00:00"
                createdAt: "2018-06-15 08:00:00"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              enabled:
                type: "integer"
                format: "int32"
                minimum: 0
                maximum: 1
                description: "Returns 1 if OnForOne is enabled for the card, else returns 0"
                example: 1
              on_for_one:
                type: "object"
                description: "Returns the validUntil and createdAt date times of the currently active OnForOne, if present, else is not included in the output"
                properties:
                  validUntil:
                    type: "string"
                    format: "date-time"
                    description: "Expiry date time for the currently active OnForOne"
                    example: "2018-06-15 23:00:00"
                  createdAt:
                    type: "string"
                    format: "date-time"
                    description: "The date-time when onForOne is explicitly enabled in YYYY-MM-DD HH:mm:ss"
                    example: "2018-06-15 08:00:00"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
    put:
      tags:
        - "Card Controls"
      summary: "Enable or disable onForOne card settings."
      description: "Enable or disable onForOne card settings. An expiry date may be optionally defined if onForOne is enabled, but is defaulted to 24 hours if unspecified."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "enabled"
            properties:
              enabled:
                type: "integer"
                format: "int32"
                minimum: 0
                maximum: 1
                description: "Send 1 for enabling OnForOne and 0 for disabling"
                example: 1
              expireTime:
                type: "string"
                format: "date-time"
                description: "Date time at which the currently active OnForOne must expire. If not set, defaults to 24 hours from the creation date time."
                example: "2018-06-30 00:00:00"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds with the validUntil and createdAt dates if onForOne is on"
          examples:
            application/json:
              enabled: 1
              on_for_one:
                validUntil: "2018-06-15 23:00:00"
                createdAt: "2018-06-15 08:00:00"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              enabled:
                type: "integer"
                format: "int32"
                minimum: 0
                maximum: 1
                description: "Returns 1 if OnForOne is enabled for the card, else returns 0"
                example: 1
              on_for_one:
                type: "object"
                description: "Returns the validUntil and createdAt date times of the currently active OnForOne, if present, else is not included in the output"
                properties:
                  validUntil:
                    type: "string"
                    format: "date-time"
                    description: "Expiry date time for the currently active OnForOne"
                    example: "2018-06-15 23:00:00"
                  createdAt:
                    type: "string"
                    format: "date-time"
                    description: "The date-time when onForOne is explicitly enabled in YYYY-MM-DD HH:mm:ss"
                    example: "2018-06-15 08:00:00"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
        400-C:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Enabled"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns Invalid Resource: Enabled"
                example: "Invalid Resource: Enabled"
        400-D:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Expiration Time"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns Invalid Resource: Expiration Time"
                example: "Invalid Resource: Expiration Time"
  /api/v1/cardSettings/changePaymentChannels:
    post:
      tags:
        - "Card Controls"
      summary: "Enable or disable payment channels"
      description: "Enable or disable the different payment channel options of a card. By default, all payment channels are enabled for card use. If a channel is disabled, any transaction from that card for the channel is blocked. Note that some channels might not be applicable. The standard ones are: ATM, POS, ECOM, and MOTO."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                type: "string"
                description: "SHA-256 hash of card number"
                example: "4533117029874ead3cca91938512621cf54a99b9a82827af9708c51d5d943e78"
              ATM:
                type: "integer"
                format: "int32"
                default: 1
                minimum: 0
                maximum: 1
                description: "Allow automated teller machine (ATM) transactions. Important Note, At least 1 payment channel from the set of { POS, ATM, ECOM, MOTO } is required."
                example: 1
              ECOM:
                type: "integer"
                format: "int32"
                default: 1
                minimum: 0
                maximum: 1
                description: "Allow e-commerce transactions. Important Note, At least 1 payment channel from the set of { POS, ATM, ECOM, MOTO } is required."
                example: 1
              POS:
                type: "integer"
                format: "int32"
                default: 1
                minimum: 0
                maximum: 1
                description: "Allow point-of-sale (POS) transactions. Important Note, At least 1 payment channel from the set of { POS, ATM, ECOM, MOTO } is required."
                example: 1
              MOTO:
                type: "integer"
                format: "int32"
                default: 1
                minimum: 0
                maximum: 1
                description: "Allow mail-order/phone-order (MOTO) transactions. Important Note, At least 1 payment channel from the set of { POS, ATM, ECOM, MOTO } is required."
                example: 1
              CNTC:
                type: "integer"
                format: "int32"
                default: 1
                minimum: 0
                maximum: 1
                description: "Allow contactless card charges. Important Note, At least 1 payment channel from the set of { POS, ATM, ECOM, MOTO } is required."
                example: 1
          description: "Request object"
      responses:
        201:
          description: "Success - Responds with the card's payment channel settings"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              ATM: 1
              ECOM: 1
              POS: 1
              MOTO: 0
              CNTC: 0
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              ATM:
                type: "integer"
                format: "int32"
                description: "Allow automated teller machine (ATM) transactions"
                example: 1
              ECOM:
                type: "integer"
                format: "int32"
                description: "Allow e-commerce transactions"
                example: 1
              POS:
                type: "integer"
                format: "int32"
                description: "Allow point-of-sale (POS) transactions"
                example: 1
              MOTO:
                type: "integer"
                format: "int32"
                description: "Allow mail-order/phone-order (MOTO) transactions"
                example: 1
              CNTC:
                type: "integer"
                format: "int32"
                description: "Allow contactless card charges"
                example: 1
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
        400-C:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: ATM, ECOM, POS, MOTO"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                description: "Returns Missing Resource: ATM, ECOM, POS, MOTO Note -  At least 1 payment channel from the set of { POS, ATM, ECOM, MOTO } is required."
                example: "Missing Resource: ATM, ECOM, POS, MOTO"
  /api/v1/cardSettings/getPaymentChannels:
    post:
      tags:
        - "Card Controls"
      summary: "Retrieve card's payment channels"
      description: "Respond with the card's payment channels"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                type: "string"
                description: "SHA-256 hash of card number"
                example: "4533117029874ead3cca91938512621cf54a99b9a82827af9708c51d5d943e78"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds with the card's payment channel settings"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              ATM: 1
              ECOM: 1
              POS: 1
              MOTO: 0
              CNTC: 0
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              ATM:
                type: "integer"
                format: "int32"
                description: "Automated teller machine (ATM) transactions"
                example: 1
              ECOM:
                type: "integer"
                format: "int32"
                description: "E-commerce transactions"
                example: 1
              POS:
                type: "integer"
                format: "int32"
                description: "Point-of-sale (POS) transactions"
                example: 1
              MOTO:
                type: "integer"
                format: "int32"
                description: "Mail-order/phone-order (MOTO) transactions"
                example: 1
              CNTC:
                type: "integer"
                format: "int32"
                description: "Contactless card charges"
                example: 1
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
  /api/v1/travel/blacklist:
    post:
      tags:
        - "Travel"
      summary: "Blacklist countries"
      description: "Blacklist countries that are specified in the request body"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "countries"
            properties:
              countries:
                type: "string"
                example: "124, 840"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Countries"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is countries"
                example: "Missing Resource: Countries"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/travel/whitelist:
    post:
      tags:
        - "Travel"
      summary: "Whitelist countries"
      description: "Whitelist countries that are specified in the request body"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "countries"
            properties:
              countries:
                type: "string"
                example: "124, 840"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Countries"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is countries"
                example: "Missing Resource: Countries"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/travel/getCountries:
    post:
      tags:
        - "Travel"
      summary: "Retrieve approved countries"
      description: "Retrieves a list of approved countries associated with the card"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              autoenabledCountry: "840"
              countries:
                - 840
                - 4
                - 248
                - 8
                - 12
                - 16
                - 20
                - 24
                - 660
                - 10
                - 28
                - 32
                - 51
                - 533
                - 36
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              autoenabledCountry:
                type: "string"
                description: "ISO 3166-1 numeric country code"
                example: "840"
              countries:
                type: "array"
                items:
                  type: "integer"
                  description: "ISO 3166-1 numeric country code"
                  example: 840
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
  /api/v1/travel/addCountry:
    post:
      tags:
        - "Travel"
      summary: "Adds a country to be enabled"
      description: "Adds a country to be enabled for a particular card to the database.> Updates autoenable countries if autoenable and geolocation are enabled"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
              - "country"
            properties:
              country:
                type: "integer"
                description: "ISO 3166-1 numeric country code"
                example: 840
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
        400-C:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Country"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                type: "string"
                description: "Returns Missing Resource: Country"
                example: "Missing Resource: Country"
        400-D:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Country"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns Invalid Resource: Country"
                example: "Invalid Resource: Country"
  /api/v1/travel/updateCountries:
    put:
      tags:
        - "Travel"
      summary: "Updates the list of approved countries"
      description: "Replaces cardSettings.approvedCountries array for a card record. Updates autoenable countries if autoenable and geolocation are enabled"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
              - "approvedCountries"
            example:
              hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              approvedCountries:
                - 870
                - 2
                - 248
                - 8
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              approvedCountries:
                type: "array"
                items:
                  type: "integer"
                  description: "ISO 639-1 numeric country codes of those countries that need to turn ON"
                  example: 840
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
  /api/v1/travel/removeCountry:
    delete:
      tags:
        - "Travel"
      summary: "Removes a country in the Approved Country List"
      description: "Removes a country that is currently enabled for a particular card from the database. Updates autoenable countries if autoenable and geolocation are enabled"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
              - "country"
            properties:
              country:
                type: "integer"
                description: "ISO 3166-1 numeric country code"
                example: 840
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          description: "Request object"
      responses:
        204:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
        400-C:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Country"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                type: "string"
                description: "Returns Missing Resource: Country"
                example: "Missing Resource: Country"
        400-D:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Country"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns Invalid Resource: Country"
                example: "Invalid Resource: Country"
  /api/v1/travel/addState:
    post:
      tags:
        - "Travel"
      summary: "Adds a state to whitelist"
      description: "Adds a state to whitelist> Updates autoenable states if autoenable and geolocation are enabled"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
              - "state"
            example:
              hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              state: "FL"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              state:
                type: "string"
                example: "FL"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash, state"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/travel/removeState:
    delete:
      tags:
        - "Travel"
      summary: "Removes a state from whitelist"
      description: "Removes a state from whitelist> Updates autoenable states if autoenable and geolocation are enabled"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
              - "state"
            example:
              hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              state: "FL"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              state:
                type: "string"
                example: "FL"
          description: "Request object"
      responses:
        204:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: State"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / state"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/travel/codes:
    get:
      tags:
        - "Travel"
      summary: "Retrieve Travel Codes"
      description: "Retrieve Travel Codes"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              codes:
                - numeric: "724"
                  code: "724"
                  alpha2: "ES"
                  alpha3: "ESP"
                  name: "Espanha"
                - numeric: "840"
                  code: "840"
                  alpha2: "US"
                  alpha3: "USA"
                  name: "Estados Unidos"
                  states:
                    - code: "AL"
                      name: "Alabama"
                    - code: "AK"
                      name: "Alaska"
                    - code: "GA"
                      name: "Georgia"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              codes:
                type: "array"
                items:
                  properties:
                    numeric:
                      type: "string"
                      example: 840
                    code:
                      type: "string"
                      example: 840
                    alpha2:
                      type: "string"
                      example: "US"
                    alpha3:
                      type: "string"
                      example: "USA"
                    name:
                      type: "string"
                      example: "Estados Unidos"
                    states:
                      type: "array"
                      items:
                        properties:
                          code:
                            type: "string"
                            example: "AL"
                          name:
                            type: "string"
                            example: "Alabama"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/travel/getStates:
    post:
      tags:
        - "Travel"
      summary: "Retrieve Travel States"
      description: "Retrieve Travel States associated with card"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              autoenabledState: "CA"
              states:
                - "CT"
                - "SD"
                - "GA"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              autoenabledState:
                type: "string"
                example: "CA"
              states:
                type: "array"
                items:
                  type: "string"
                  example: "GA"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/whitelist/merchants:
    get:
      tags:
        - "Whitelist"
      summary: "Retrieve whitelisted merchants"
      description: "Retrieve whitelisted merchants for the given card hash"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "hash"
          required: true
          in: "query"
          type: "string"
          description: "SHA-256 hash of card number"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              whitelisted:
                - merchant_id: 2
                  merchant_name: "Nike"
                  merchant_full_name: "Nike's Time Squere"
                  mcc_code: "5678"
                  description: "Just Do It!"
              recently_removed:
                - merchant_id: 1
                  merchant_name: "Mc Donald's"
                  merchant_full_name: "Mc Donald's Time Squere"
                  mcc_code: "5678"
                  description: "Just Do It!"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              whitelisted:
                type: "array"
                items:
                  type: "object"
                  properties:
                    merchant_id:
                      type: "integer"
                      example: 2
                    merchant_name:
                      type: "string"
                      example: "Nike"
                    merchant_full_name:
                      type: "string"
                      example: "Nike's Time Squere"
                    mcc_code:
                      type: "string"
                      example: "1234"
                    description:
                      type: "string"
                      example: "Make some magic"
              recently_removed:
                type: "array"
                items:
                  type: "object"
                  properties:
                    merchant_id:
                      type: "integer"
                      example: 1
                    merchant_name:
                      type: "string"
                      example: "Mc Donald's"
                    merchant_full_name:
                      type: "string"
                      example: "Mc Donald's Time Squere"
                    mcc_code:
                      type: "string"
                      example: "1234"
                    description:
                      type: "string"
                      example: "Make some magic"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    post:
      tags:
        - "Whitelist"
      summary: "Adds a new merchant to the whitelist"
      description: "Adds a new merchant to the whitelist"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
              - "merchantIdentifier"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              merchantIdentifier:
                type: "string"
                example: "Nike"
          description: "Request object"
      responses:
        204:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Merchant Identifier"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / merchantIdentifier"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    delete:
      tags:
        - "Whitelist"
      summary: "Delete merchants from the whitelist"
      description: "Delete merchants from the whitelist"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "hash"
              - "merchant_names"
            properties:
              hash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
              merchant_names:
                type: "array"
                items:
                  type: "string"
                  example: "Nike"
          description: "Request object"
      responses:
        204:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resources: Merchant Names"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / merchant_names"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/ap/card/whitelist/merchants:
    post:
      tags:
        - "Whitelist"
      summary: "Add merchants to the whitelist"
      description: "Add merchants to the whitelist"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "id"
              - "merchant_names"
            properties:
              id:
                type: "integer"
                example: 1
              merchant_names:
                type: "array"
                items:
                  type: "string"
                  example: "McDonald's Times Square"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resources: Merchant Names"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / merchant_names"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    delete:
      tags:
        - "Whitelist"
      summary: "Delete merchants from the whitelist"
      description: "Delete merchants from the whitelist"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "id"
              - "merchant_names"
            properties:
              id:
                type: "integer"
                example: 1
              merchant_names:
                type: "array"
                items:
                  type: "string"
                  example: "McDonald's Times Square"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resources: Merchant Names"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / merchant_names"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/ap/orgs/whitelist/merchants:
    get:
      tags:
        - "Whitelist"
      summary: "Retrieve whitelisted merchants via org and / or merchant id"
      description: "Retrieve whitelisted merchants via org and / or merchant id"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "merchants"
          in: "query"
          required: false
          type: "string"
          description: "Merchant ID"
        - name: "org"
          in: "query"
          required: false
          type: "string"
          description: "Org ID"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              orgMerchantWhitelist:
                - org_id: 1
                  org_name: "Test Org"
                  merchant_id: 2
                  merchant_name: "Apple"
                  merchant_full_name: "Apple Inc"
                  mcc_code: "101010"
                  description: "Think Differently"
                - org_id: 2
                  org_name: "Test Org 2"
                  merchant_id: 1
                  merchant_name: "Nike"
                  merchant_full_name: "Nike Times Square"
                  mcc_code: "5678"
                  description: "Just Do It!"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns http code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              orgMerchantWhitelist:
                type: "array"
                items:
                  type: "object"
                  properties:
                    org_id:
                      type: "integer"
                      example: 1
                    org_name:
                      type: "string"
                      example: "Test Org"
                    merchant_id:
                      type: "integer"
                      example: 2
                    merchant_name:
                      type: "string"
                      example: "Apple"
                    merchant_full_name:
                      type: "string"
                      example: "Apple Inc"
                    mcc_code:
                      type: "string"
                      example: "101010"
                    description:
                      type: "string"
                      example: "Think Differently"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    post:
      tags:
        - "Whitelist"
      summary: "Add merchants to the whitelist"
      description: "Add merchants to the whitelist"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "org_id"
              - "merchant_names"
            example:
              org_id: 123412
              merchant_names:
                - "McDonald's Times Square"
                - "Nike Times's Square"
                - "Starbucks"
                - "Apple"
            properties:
              org_id:
                type: "number"
                example: 123412
              merchant_names:
                type: "array"
                items:
                  type: "string"
                  example: "McDonald's Times Square"
          description: "Request object"
      responses:
        201:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 201
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 201"
                example: 201
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resources: Merchant Names"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is org_id / merchant_names"
                example: "Missing Resource: Organization ID"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    delete:
      tags:
        - "Whitelist"
      summary: "Remove organization merchants from the whitelist"
      description: "Remove organization merchants from the whitelist"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "org_id"
              - "merchant_names"
            example:
              org_id: 123412
              merchant_names:
                - "McDonald's Times Square"
                - "Nike Times's Square"
                - "Starbucks"
                - "Apple"
            properties:
              org_id:
                type: "number"
                example: 123412
              merchant_names:
                type: "array"
                items:
                  type: "string"
                  example: "McDonald's Times Square"
          description: "Request object"
      responses:
        204:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resources: Merchant Names"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is org_id / merchant_names"
                example: "Missing Resource: Organization ID"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns http code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
tags: []
